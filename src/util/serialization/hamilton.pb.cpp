// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: transaction.proto

#include "hamilton.pb.hpp"

#include <algorithm>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/wire_format.h>
#include <google/protobuf/wire_format_lite_inl.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

#include "uhs/transaction/transaction.hpp"
#include "util/rpc/messages.hpp"

#include <iostream>

namespace protobuf_hamilton_2eproto {
    extern PROTOBUF_INTERNAL_EXPORT_protobuf_hamilton_2eproto ::google::
        protobuf::internal::SCCInfo<0>
            scc_info_Outpoint;
    extern PROTOBUF_INTERNAL_EXPORT_protobuf_hamilton_2eproto ::google::
        protobuf::internal::SCCInfo<0>
            scc_info_Output;
    extern PROTOBUF_INTERNAL_EXPORT_protobuf_hamilton_2eproto ::google::
        protobuf::internal::SCCInfo<0>
            scc_info_Witness;
    extern PROTOBUF_INTERNAL_EXPORT_protobuf_hamilton_2eproto ::google::
        protobuf::internal::SCCInfo<2>
            scc_info_Input;
} // namespace protobuf_hamilton_2eproto
namespace transaction {
    class OutpointDefaultTypeInternal {
      public:
        ::google::protobuf::internal::ExplicitlyConstructed<Outpoint>
            _instance;
    } _Outpoint_default_instance_;
    class OutputDefaultTypeInternal {
      public:
        ::google::protobuf::internal::ExplicitlyConstructed<Output> _instance;
    } _Output_default_instance_;
    class InputDefaultTypeInternal {
      public:
        ::google::protobuf::internal::ExplicitlyConstructed<Input> _instance;
    } _Input_default_instance_;
    class WitnessDefaultTypeInternal {
      public:
        ::google::protobuf::internal::ExplicitlyConstructed<Witness> _instance;
    } _Witness_default_instance_;
    class TransactionDefaultTypeInternal {
      public:
        ::google::protobuf::internal::ExplicitlyConstructed<Transaction>
            _instance;
    } _Transaction_default_instance_;
    class TransactionResponseDefaultTypeInternal {
      public:
        ::google::protobuf::internal::ExplicitlyConstructed<
            TransactionResponse>
            _instance;
    } _TransactionResponse_default_instance_;
} // namespace transaction
namespace protobuf_hamilton_2eproto {
    static void InitDefaultsOutpoint() {
        GOOGLE_PROTOBUF_VERIFY_VERSION;

        {
            void* ptr = &::transaction::_Outpoint_default_instance_;
            new(ptr)::transaction::Outpoint();
            ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
        }
        ::transaction::Outpoint::InitAsDefaultInstance();
    }

    ::google::protobuf::internal::SCCInfo<0> scc_info_Outpoint
        = {{ATOMIC_VAR_INIT(
                ::google::protobuf::internal::SCCInfoBase::kUninitialized),
            0,
            InitDefaultsOutpoint},
           {}};

    static void InitDefaultsOutput() {
        GOOGLE_PROTOBUF_VERIFY_VERSION;

        {
            void* ptr = &::transaction::_Output_default_instance_;
            new(ptr)::transaction::Output();
            ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
        }
        ::transaction::Output::InitAsDefaultInstance();
    }

    ::google::protobuf::internal::SCCInfo<0> scc_info_Output
        = {{ATOMIC_VAR_INIT(
                ::google::protobuf::internal::SCCInfoBase::kUninitialized),
            0,
            InitDefaultsOutput},
           {}};

    static void InitDefaultsInput() {
        GOOGLE_PROTOBUF_VERIFY_VERSION;

        {
            void* ptr = &::transaction::_Input_default_instance_;
            new(ptr)::transaction::Input();
            ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
        }
        ::transaction::Input::InitAsDefaultInstance();
    }

    ::google::protobuf::internal::SCCInfo<2> scc_info_Input
        = {{ATOMIC_VAR_INIT(
                ::google::protobuf::internal::SCCInfoBase::kUninitialized),
            2,
            InitDefaultsInput},
           {
               &protobuf_hamilton_2eproto::scc_info_Outpoint.base,
               &protobuf_hamilton_2eproto::scc_info_Output.base,
           }};

    static void InitDefaultsWitness() {
        GOOGLE_PROTOBUF_VERIFY_VERSION;

        {
            void* ptr = &::transaction::_Witness_default_instance_;
            new(ptr)::transaction::Witness();
            ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
        }
        ::transaction::Witness::InitAsDefaultInstance();
    }

    ::google::protobuf::internal::SCCInfo<0> scc_info_Witness
        = {{ATOMIC_VAR_INIT(
                ::google::protobuf::internal::SCCInfoBase::kUninitialized),
            0,
            InitDefaultsWitness},
           {}};

    static void InitDefaultsTransaction() {
        GOOGLE_PROTOBUF_VERIFY_VERSION;

        {
            void* ptr = &::transaction::_Transaction_default_instance_;
            new(ptr)::transaction::Transaction();
            ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
        }
        ::transaction::Transaction::InitAsDefaultInstance();
    }

    ::google::protobuf::internal::SCCInfo<3> scc_info_Transaction
        = {{ATOMIC_VAR_INIT(
                ::google::protobuf::internal::SCCInfoBase::kUninitialized),
            3,
            InitDefaultsTransaction},
           {
               &protobuf_hamilton_2eproto::scc_info_Input.base,
               &protobuf_hamilton_2eproto::scc_info_Output.base,
               &protobuf_hamilton_2eproto::scc_info_Witness.base,
           }};

    static void InitDefaultsTransactionResponse() {
        GOOGLE_PROTOBUF_VERIFY_VERSION;

        {
            void* ptr = &::transaction::_TransactionResponse_default_instance_;
            new(ptr)::transaction::TransactionResponse();
            ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
        }
        ::transaction::TransactionResponse::InitAsDefaultInstance();
    }

    ::google::protobuf::internal::SCCInfo<0> scc_info_TransactionResponse
        = {{ATOMIC_VAR_INIT(
                ::google::protobuf::internal::SCCInfoBase::kUninitialized),
            0,
            InitDefaultsTransactionResponse},
           {}};

    void InitDefaults() {
        ::google::protobuf::internal::InitSCC(&scc_info_Outpoint.base);
        ::google::protobuf::internal::InitSCC(&scc_info_Output.base);
        ::google::protobuf::internal::InitSCC(&scc_info_Input.base);
        ::google::protobuf::internal::InitSCC(&scc_info_Witness.base);
        ::google::protobuf::internal::InitSCC(&scc_info_Transaction.base);
        ::google::protobuf::internal::InitSCC(
            &scc_info_TransactionResponse.base);
    }

    ::google::protobuf::Metadata file_level_metadata[6];

    const ::google::protobuf::uint32
        TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(
            protodesc_cold)
        = {
            ~0u, // no _has_bits_
            GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(
                ::transaction::Outpoint,
                _internal_metadata_),
            ~0u, // no _extensions_
            ~0u, // no _oneof_case_
            ~0u, // no _weak_field_map_
            GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(
                ::transaction::Outpoint,
                transaction_id_),
            GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(
                ::transaction::Outpoint,
                index_),
            ~0u, // no _has_bits_
            GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(
                ::transaction::Output,
                _internal_metadata_),
            ~0u, // no _extensions_
            ~0u, // no _oneof_case_
            ~0u, // no _weak_field_map_
            GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(
                ::transaction::Output,
                public_key_),
            GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(
                ::transaction::Output,
                value_),
            ~0u, // no _has_bits_
            GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(
                ::transaction::Input,
                _internal_metadata_),
            ~0u, // no _extensions_
            ~0u, // no _oneof_case_
            ~0u, // no _weak_field_map_
            GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(
                ::transaction::Input,
                outpoint_),
            GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(
                ::transaction::Input,
                output_),
            ~0u, // no _has_bits_
            GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(
                ::transaction::Witness,
                _internal_metadata_),
            ~0u, // no _extensions_
            ~0u, // no _oneof_case_
            ~0u, // no _weak_field_map_
            GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(
                ::transaction::Witness,
                signature_),
            ~0u, // no _has_bits_
            GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(
                ::transaction::Transaction,
                _internal_metadata_),
            ~0u, // no _extensions_
            ~0u, // no _oneof_case_
            ~0u, // no _weak_field_map_
            GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(
                ::transaction::Transaction,
                inputs_),
            GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(
                ::transaction::Transaction,
                outputs_),
            GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(
                ::transaction::Transaction,
                witnesses_),
            ~0u, // no _has_bits_
            GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(
                ::transaction::TransactionResponse,
                _internal_metadata_),
            ~0u, // no _extensions_
            ~0u, // no _oneof_case_
            ~0u, // no _weak_field_map_
            GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(
                ::transaction::TransactionResponse,
                message_),
    };
    static const ::google::protobuf::internal::MigrationSchema
        schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold)
        = {
            {0, -1, sizeof(::transaction::Outpoint)},
            {7, -1, sizeof(::transaction::Output)},
            {14, -1, sizeof(::transaction::Input)},
            {21, -1, sizeof(::transaction::Witness)},
            {27, -1, sizeof(::transaction::Transaction)},
            {35, -1, sizeof(::transaction::TransactionResponse)},
    };

    static ::google::protobuf::Message const* const file_default_instances[]
        = {
            reinterpret_cast<const ::google::protobuf::Message*>(
                &::transaction::_Outpoint_default_instance_),
            reinterpret_cast<const ::google::protobuf::Message*>(
                &::transaction::_Output_default_instance_),
            reinterpret_cast<const ::google::protobuf::Message*>(
                &::transaction::_Input_default_instance_),
            reinterpret_cast<const ::google::protobuf::Message*>(
                &::transaction::_Witness_default_instance_),
            reinterpret_cast<const ::google::protobuf::Message*>(
                &::transaction::_Transaction_default_instance_),
            reinterpret_cast<const ::google::protobuf::Message*>(
                &::transaction::_TransactionResponse_default_instance_),
    };

    void protobuf_AssignDescriptors() {
        AddDescriptors();
        AssignDescriptors("hamilton.proto",
                          schemas,
                          file_default_instances,
                          TableStruct::offsets,
                          file_level_metadata,
                          NULL,
                          NULL);
    }

    void protobuf_AssignDescriptorsOnce() {
        static ::google::protobuf::internal::once_flag once;
        ::google::protobuf::internal::call_once(once,
                                                protobuf_AssignDescriptors);
    }

    void protobuf_RegisterTypes(const ::std::string&)
        GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
    void protobuf_RegisterTypes(const ::std::string&) {
        protobuf_AssignDescriptorsOnce();
        ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 6);
    }

    void AddDescriptorsImpl() {
        InitDefaults();
        static const char
            descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(
                protodesc_cold)
            = {"\n\016hamilton.proto\022\013transaction\"1\n\010Outpoin"
               "t\022\026\n\016transaction_id\030\001 "
               "\001(\014\022\r\n\005index\030\002 \001(\004"
               "\"+\n\006Output\022\022\n\npublic_key\030\001 "
               "\001(\014\022\r\n\005value\030"
               "\002 \001(\004\"U\n\005Input\022\'\n\010outpoint\030\001 "
               "\001(\0132\025.trans"
               "action.Outpoint\022#\n\006output\030\002 \001(\0132\023.transa"
               "ction.Output\"\034\n\007Witness\022\021\n\tsignature\030\001 "
               "\001"
               "(\014\"\200\001\n\013Transaction\022\"\n\006inputs\030\001 "
               "\003(\0132\022.tra"
               "nsaction.Input\022$\n\007outputs\030\002 \003(\0132\023.transa"
               "ction.Output\022\'\n\twitnesses\030\003 \003(\0132\024.transa"
               "ction.Witness\"&\n\023TransactionResponse\022\017\n\007"
               "message\030\001 \001(\tb\006proto3"};
        ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
            descriptor,
            421);
        ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
            "hamilton.proto",
            &protobuf_RegisterTypes);
    }

    void AddDescriptors() {
        static ::google::protobuf::internal::once_flag once;
        ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
    }
    // Force AddDescriptors() to be called at dynamic initialization time.
    struct StaticDescriptorInitializer {
        StaticDescriptorInitializer() {
            AddDescriptors();
        }
    } static_descriptor_initializer;
} // namespace protobuf_hamilton_2eproto
namespace transaction {

    // ===================================================================

    void Outpoint::InitAsDefaultInstance() {}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
    const int Outpoint::kTransactionIdFieldNumber;
    const int Outpoint::kIndexFieldNumber;
#endif // !defined(_MSC_VER) || _MSC_VER >= 1900

    Outpoint::Outpoint()
        : ::google::protobuf::Message(),
          _internal_metadata_(NULL) {
        ::google::protobuf::internal::InitSCC(
            &protobuf_hamilton_2eproto::scc_info_Outpoint.base);
        SharedCtor();
        // @@protoc_insertion_point(constructor:transaction.Outpoint)
    }
    Outpoint::Outpoint(const Outpoint& from)
        : ::google::protobuf::Message(),
          _internal_metadata_(NULL) {
        _internal_metadata_.MergeFrom(from._internal_metadata_);
        transaction_id_.UnsafeSetDefault(
            &::google::protobuf::internal::GetEmptyStringAlreadyInited());
        if(from.transaction_id().size() > 0) {
            transaction_id_.AssignWithDefault(
                &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
                from.transaction_id_);
        }
        index_ = from.index_;
        // @@protoc_insertion_point(copy_constructor:transaction.Outpoint)
    }

    void Outpoint::SharedCtor() {
        transaction_id_.UnsafeSetDefault(
            &::google::protobuf::internal::GetEmptyStringAlreadyInited());
        index_ = GOOGLE_ULONGLONG(0);
    }

    Outpoint::~Outpoint() {
        // @@protoc_insertion_point(destructor:transaction.Outpoint)
        SharedDtor();
    }

    void Outpoint::SharedDtor() {
        transaction_id_.DestroyNoArena(
            &::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }

    void Outpoint::SetCachedSize(int size) const {
        _cached_size_.Set(size);
    }
    const ::google::protobuf::Descriptor* Outpoint::descriptor() {
        ::protobuf_hamilton_2eproto::protobuf_AssignDescriptorsOnce();
        return ::protobuf_hamilton_2eproto::file_level_metadata
            [kIndexInFileMessages]
                .descriptor;
    }

    const Outpoint& Outpoint::default_instance() {
        ::google::protobuf::internal::InitSCC(
            &protobuf_hamilton_2eproto::scc_info_Outpoint.base);
        return *internal_default_instance();
    }

    void Outpoint::Clear() {
        // @@protoc_insertion_point(message_clear_start:transaction.Outpoint)
        ::google::protobuf::uint32 cached_has_bits = 0;
        // Prevent compiler warnings about cached_has_bits being unused
        (void)cached_has_bits;

        transaction_id_.ClearToEmptyNoArena(
            &::google::protobuf::internal::GetEmptyStringAlreadyInited());
        index_ = GOOGLE_ULONGLONG(0);
        _internal_metadata_.Clear();
    }

    bool Outpoint::MergePartialFromCodedStream(
        ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION)                  \
    if(!GOOGLE_PREDICT_TRUE(EXPRESSION)) \
    goto failure
        ::google::protobuf::uint32 tag;
        // @@protoc_insertion_point(parse_start:transaction.Outpoint)
        for(;;) {
            ::std::pair<::google::protobuf::uint32, bool> p
                = input->ReadTagWithCutoffNoLastTag(127u);
            tag = p.first;
            if(!p.second)
                goto handle_unusual;
            switch(::google::protobuf::internal::WireFormatLite::
                       GetTagFieldNumber(tag)) {
                // bytes transaction_id = 1;
                case 1: {
                    if(static_cast<::google::protobuf::uint8>(tag)
                       == static_cast<::google::protobuf::uint8>(
                           10u /* 10 & 0xFF */)) {
                        DO_(::google::protobuf::internal::WireFormatLite::
                                ReadBytes(input,
                                          this->mutable_transaction_id()));
                    } else {
                        goto handle_unusual;
                    }
                    break;
                }

                // uint64 index = 2;
                case 2: {
                    if(static_cast<::google::protobuf::uint8>(tag)
                       == static_cast<::google::protobuf::uint8>(
                           16u /* 16 & 0xFF */)) {
                        DO_((
                            ::google::protobuf::internal::WireFormatLite::
                                ReadPrimitive<::google::protobuf::uint64,
                                              ::google::protobuf::internal::
                                                  WireFormatLite::TYPE_UINT64>(
                                    input,
                                    &index_)));
                    } else {
                        goto handle_unusual;
                    }
                    break;
                }

                default: {
                handle_unusual:
                    if(tag == 0) {
                        goto success;
                    }
                    DO_(::google::protobuf::internal::WireFormat::SkipField(
                        input,
                        tag,
                        _internal_metadata_.mutable_unknown_fields()));
                    break;
                }
            }
        }
    success:
        // @@protoc_insertion_point(parse_success:transaction.Outpoint)
        return true;
    failure:
        // @@protoc_insertion_point(parse_failure:transaction.Outpoint)
        return false;
#undef DO_
    }

    void Outpoint::SerializeWithCachedSizes(
        ::google::protobuf::io::CodedOutputStream* output) const {
        // @@protoc_insertion_point(serialize_start:transaction.Outpoint)
        ::google::protobuf::uint32 cached_has_bits = 0;
        (void)cached_has_bits;

        // bytes transaction_id = 1;
        if(this->transaction_id().size() > 0) {
            ::google::protobuf::internal::WireFormatLite::
                WriteBytesMaybeAliased(1, this->transaction_id(), output);
        }

        // uint64 index = 2;
        if(this->index() != 0) {
            ::google::protobuf::internal::WireFormatLite::WriteUInt64(
                2,
                this->index(),
                output);
        }

        if((_internal_metadata_.have_unknown_fields()
            && ::google::protobuf::internal::
                GetProto3PreserveUnknownsDefault())) {
            ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
                (::google::protobuf::internal::
                         GetProto3PreserveUnknownsDefault()
                     ? _internal_metadata_.unknown_fields()
                     : _internal_metadata_.default_instance()),
                output);
        }
        // @@protoc_insertion_point(serialize_end:transaction.Outpoint)
    }

    ::google::protobuf::uint8*
    Outpoint::InternalSerializeWithCachedSizesToArray(
        bool deterministic,
        ::google::protobuf::uint8* target) const {
        (void)deterministic; // Unused
        // @@protoc_insertion_point(serialize_to_array_start:transaction.Outpoint)
        ::google::protobuf::uint32 cached_has_bits = 0;
        (void)cached_has_bits;

        // bytes transaction_id = 1;
        if(this->transaction_id().size() > 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteBytesToArray(1, this->transaction_id(), target);
        }

        // uint64 index = 2;
        if(this->index() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteUInt64ToArray(2, this->index(), target);
        }

        if((_internal_metadata_.have_unknown_fields()
            && ::google::protobuf::internal::
                GetProto3PreserveUnknownsDefault())) {
            target = ::google::protobuf::internal::WireFormat::
                SerializeUnknownFieldsToArray(
                    (::google::protobuf::internal::
                             GetProto3PreserveUnknownsDefault()
                         ? _internal_metadata_.unknown_fields()
                         : _internal_metadata_.default_instance()),
                    target);
        }
        // @@protoc_insertion_point(serialize_to_array_end:transaction.Outpoint)
        return target;
    }

    size_t Outpoint::ByteSizeLong() const {
        // @@protoc_insertion_point(message_byte_size_start:transaction.Outpoint)
        size_t total_size = 0;

        if((_internal_metadata_.have_unknown_fields()
            && ::google::protobuf::internal::
                GetProto3PreserveUnknownsDefault())) {
            total_size += ::google::protobuf::internal::WireFormat::
                ComputeUnknownFieldsSize(
                    (::google::protobuf::internal::
                             GetProto3PreserveUnknownsDefault()
                         ? _internal_metadata_.unknown_fields()
                         : _internal_metadata_.default_instance()));
        }
        // bytes transaction_id = 1;
        if(this->transaction_id().size() > 0) {
            total_size
                += 1
                 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                       this->transaction_id());
        }

        // uint64 index = 2;
        if(this->index() != 0) {
            total_size
                += 1
                 + ::google::protobuf::internal::WireFormatLite::UInt64Size(
                       this->index());
        }

        int cached_size
            = ::google::protobuf::internal::ToCachedSize(total_size);
        SetCachedSize(cached_size);
        return total_size;
    }

    void Outpoint::MergeFrom(const ::google::protobuf::Message& from) {
        // @@protoc_insertion_point(generalized_merge_from_start:transaction.Outpoint)
        GOOGLE_DCHECK_NE(&from, this);
        const Outpoint* source
            = ::google::protobuf::internal::DynamicCastToGenerated<
                const Outpoint>(&from);
        if(source == NULL) {
            // @@protoc_insertion_point(generalized_merge_from_cast_fail:transaction.Outpoint)
            ::google::protobuf::internal::ReflectionOps::Merge(from, this);
        } else {
            // @@protoc_insertion_point(generalized_merge_from_cast_success:transaction.Outpoint)
            MergeFrom(*source);
        }
    }

    void Outpoint::MergeFrom(const Outpoint& from) {
        // @@protoc_insertion_point(class_specific_merge_from_start:transaction.Outpoint)
        GOOGLE_DCHECK_NE(&from, this);
        _internal_metadata_.MergeFrom(from._internal_metadata_);
        ::google::protobuf::uint32 cached_has_bits = 0;
        (void)cached_has_bits;

        if(from.transaction_id().size() > 0) {
            transaction_id_.AssignWithDefault(
                &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
                from.transaction_id_);
        }
        if(from.index() != 0) {
            set_index(from.index());
        }
    }

    void Outpoint::CopyFrom(const ::google::protobuf::Message& from) {
        // @@protoc_insertion_point(generalized_copy_from_start:transaction.Outpoint)
        if(&from == this)
            return;
        Clear();
        MergeFrom(from);
    }

    void Outpoint::CopyFrom(const Outpoint& from) {
        // @@protoc_insertion_point(class_specific_copy_from_start:transaction.Outpoint)
        if(&from == this)
            return;
        Clear();
        MergeFrom(from);
    }

    bool Outpoint::IsInitialized() const {
        return true;
    }

    void Outpoint::Swap(Outpoint* other) {
        if(other == this)
            return;
        InternalSwap(other);
    }
    void Outpoint::InternalSwap(Outpoint* other) {
        using std::swap;
        transaction_id_.Swap(
            &other->transaction_id_,
            &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
            GetArenaNoVirtual());
        swap(index_, other->index_);
        _internal_metadata_.Swap(&other->_internal_metadata_);
    }

    ::google::protobuf::Metadata Outpoint::GetMetadata() const {
        protobuf_hamilton_2eproto::protobuf_AssignDescriptorsOnce();
        return ::protobuf_hamilton_2eproto::file_level_metadata
            [kIndexInFileMessages];
    }

    // ===================================================================

    void Output::InitAsDefaultInstance() {}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
    const int Output::kPublicKeyFieldNumber;
    const int Output::kValueFieldNumber;
#endif // !defined(_MSC_VER) || _MSC_VER >= 1900

    Output::Output()
        : ::google::protobuf::Message(),
          _internal_metadata_(NULL) {
        ::google::protobuf::internal::InitSCC(
            &protobuf_hamilton_2eproto::scc_info_Output.base);
        SharedCtor();
        // @@protoc_insertion_point(constructor:transaction.Output)
    }
    Output::Output(const Output& from)
        : ::google::protobuf::Message(),
          _internal_metadata_(NULL) {
        _internal_metadata_.MergeFrom(from._internal_metadata_);
        public_key_.UnsafeSetDefault(
            &::google::protobuf::internal::GetEmptyStringAlreadyInited());
        if(from.public_key().size() > 0) {
            public_key_.AssignWithDefault(
                &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
                from.public_key_);
        }
        value_ = from.value_;
        // @@protoc_insertion_point(copy_constructor:transaction.Output)
    }

    void Output::SharedCtor() {
        public_key_.UnsafeSetDefault(
            &::google::protobuf::internal::GetEmptyStringAlreadyInited());
        value_ = GOOGLE_ULONGLONG(0);
    }

    Output::~Output() {
        // @@protoc_insertion_point(destructor:transaction.Output)
        SharedDtor();
    }

    void Output::SharedDtor() {
        public_key_.DestroyNoArena(
            &::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }

    void Output::SetCachedSize(int size) const {
        _cached_size_.Set(size);
    }
    const ::google::protobuf::Descriptor* Output::descriptor() {
        ::protobuf_hamilton_2eproto::protobuf_AssignDescriptorsOnce();
        return ::protobuf_hamilton_2eproto::file_level_metadata
            [kIndexInFileMessages]
                .descriptor;
    }

    const Output& Output::default_instance() {
        ::google::protobuf::internal::InitSCC(
            &protobuf_hamilton_2eproto::scc_info_Output.base);
        return *internal_default_instance();
    }

    void Output::Clear() {
        // @@protoc_insertion_point(message_clear_start:transaction.Output)
        ::google::protobuf::uint32 cached_has_bits = 0;
        // Prevent compiler warnings about cached_has_bits being unused
        (void)cached_has_bits;

        public_key_.ClearToEmptyNoArena(
            &::google::protobuf::internal::GetEmptyStringAlreadyInited());
        value_ = GOOGLE_ULONGLONG(0);
        _internal_metadata_.Clear();
    }

    bool Output::MergePartialFromCodedStream(
        ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION)                  \
    if(!GOOGLE_PREDICT_TRUE(EXPRESSION)) \
    goto failure
        ::google::protobuf::uint32 tag;
        // @@protoc_insertion_point(parse_start:transaction.Output)
        for(;;) {
            ::std::pair<::google::protobuf::uint32, bool> p
                = input->ReadTagWithCutoffNoLastTag(127u);
            tag = p.first;
            if(!p.second)
                goto handle_unusual;
            switch(::google::protobuf::internal::WireFormatLite::
                       GetTagFieldNumber(tag)) {
                // bytes public_key = 1;
                case 1: {
                    if(static_cast<::google::protobuf::uint8>(tag)
                       == static_cast<::google::protobuf::uint8>(
                           10u /* 10 & 0xFF */)) {
                        DO_(::google::protobuf::internal::WireFormatLite::
                                ReadBytes(input, this->mutable_public_key()));
                    } else {
                        goto handle_unusual;
                    }
                    break;
                }

                // uint64 value = 2;
                case 2: {
                    if(static_cast<::google::protobuf::uint8>(tag)
                       == static_cast<::google::protobuf::uint8>(
                           16u /* 16 & 0xFF */)) {
                        DO_((
                            ::google::protobuf::internal::WireFormatLite::
                                ReadPrimitive<::google::protobuf::uint64,
                                              ::google::protobuf::internal::
                                                  WireFormatLite::TYPE_UINT64>(
                                    input,
                                    &value_)));
                    } else {
                        goto handle_unusual;
                    }
                    break;
                }

                default: {
                handle_unusual:
                    if(tag == 0) {
                        goto success;
                    }
                    DO_(::google::protobuf::internal::WireFormat::SkipField(
                        input,
                        tag,
                        _internal_metadata_.mutable_unknown_fields()));
                    break;
                }
            }
        }
    success:
        // @@protoc_insertion_point(parse_success:transaction.Output)
        return true;
    failure:
        // @@protoc_insertion_point(parse_failure:transaction.Output)
        return false;
#undef DO_
    }

    void Output::SerializeWithCachedSizes(
        ::google::protobuf::io::CodedOutputStream* output) const {
        // @@protoc_insertion_point(serialize_start:transaction.Output)
        ::google::protobuf::uint32 cached_has_bits = 0;
        (void)cached_has_bits;

        // bytes public_key = 1;
        if(this->public_key().size() > 0) {
            ::google::protobuf::internal::WireFormatLite::
                WriteBytesMaybeAliased(1, this->public_key(), output);
        }

        // uint64 value = 2;
        if(this->value() != 0) {
            ::google::protobuf::internal::WireFormatLite::WriteUInt64(
                2,
                this->value(),
                output);
        }

        if((_internal_metadata_.have_unknown_fields()
            && ::google::protobuf::internal::
                GetProto3PreserveUnknownsDefault())) {
            ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
                (::google::protobuf::internal::
                         GetProto3PreserveUnknownsDefault()
                     ? _internal_metadata_.unknown_fields()
                     : _internal_metadata_.default_instance()),
                output);
        }
        // @@protoc_insertion_point(serialize_end:transaction.Output)
    }

    ::google::protobuf::uint8* Output::InternalSerializeWithCachedSizesToArray(
        bool deterministic,
        ::google::protobuf::uint8* target) const {
        (void)deterministic; // Unused
        // @@protoc_insertion_point(serialize_to_array_start:transaction.Output)
        ::google::protobuf::uint32 cached_has_bits = 0;
        (void)cached_has_bits;

        // bytes public_key = 1;
        if(this->public_key().size() > 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteBytesToArray(1, this->public_key(), target);
        }

        // uint64 value = 2;
        if(this->value() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteUInt64ToArray(2, this->value(), target);
        }

        if((_internal_metadata_.have_unknown_fields()
            && ::google::protobuf::internal::
                GetProto3PreserveUnknownsDefault())) {
            target = ::google::protobuf::internal::WireFormat::
                SerializeUnknownFieldsToArray(
                    (::google::protobuf::internal::
                             GetProto3PreserveUnknownsDefault()
                         ? _internal_metadata_.unknown_fields()
                         : _internal_metadata_.default_instance()),
                    target);
        }
        // @@protoc_insertion_point(serialize_to_array_end:transaction.Output)
        return target;
    }

    size_t Output::ByteSizeLong() const {
        // @@protoc_insertion_point(message_byte_size_start:transaction.Output)
        size_t total_size = 0;

        if((_internal_metadata_.have_unknown_fields()
            && ::google::protobuf::internal::
                GetProto3PreserveUnknownsDefault())) {
            total_size += ::google::protobuf::internal::WireFormat::
                ComputeUnknownFieldsSize(
                    (::google::protobuf::internal::
                             GetProto3PreserveUnknownsDefault()
                         ? _internal_metadata_.unknown_fields()
                         : _internal_metadata_.default_instance()));
        }
        // bytes public_key = 1;
        if(this->public_key().size() > 0) {
            total_size
                += 1
                 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                       this->public_key());
        }

        // uint64 value = 2;
        if(this->value() != 0) {
            total_size
                += 1
                 + ::google::protobuf::internal::WireFormatLite::UInt64Size(
                       this->value());
        }

        int cached_size
            = ::google::protobuf::internal::ToCachedSize(total_size);
        SetCachedSize(cached_size);
        return total_size;
    }

    void Output::MergeFrom(const ::google::protobuf::Message& from) {
        // @@protoc_insertion_point(generalized_merge_from_start:transaction.Output)
        GOOGLE_DCHECK_NE(&from, this);
        const Output* source
            = ::google::protobuf::internal::DynamicCastToGenerated<
                const Output>(&from);
        if(source == NULL) {
            // @@protoc_insertion_point(generalized_merge_from_cast_fail:transaction.Output)
            ::google::protobuf::internal::ReflectionOps::Merge(from, this);
        } else {
            // @@protoc_insertion_point(generalized_merge_from_cast_success:transaction.Output)
            MergeFrom(*source);
        }
    }

    void Output::MergeFrom(const Output& from) {
        // @@protoc_insertion_point(class_specific_merge_from_start:transaction.Output)
        GOOGLE_DCHECK_NE(&from, this);
        _internal_metadata_.MergeFrom(from._internal_metadata_);
        ::google::protobuf::uint32 cached_has_bits = 0;
        (void)cached_has_bits;

        if(from.public_key().size() > 0) {
            public_key_.AssignWithDefault(
                &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
                from.public_key_);
        }
        if(from.value() != 0) {
            set_value(from.value());
        }
    }

    void Output::CopyFrom(const ::google::protobuf::Message& from) {
        // @@protoc_insertion_point(generalized_copy_from_start:transaction.Output)
        if(&from == this)
            return;
        Clear();
        MergeFrom(from);
    }

    void Output::CopyFrom(const Output& from) {
        // @@protoc_insertion_point(class_specific_copy_from_start:transaction.Output)
        if(&from == this)
            return;
        Clear();
        MergeFrom(from);
    }

    bool Output::IsInitialized() const {
        return true;
    }

    void Output::Swap(Output* other) {
        if(other == this)
            return;
        InternalSwap(other);
    }
    void Output::InternalSwap(Output* other) {
        using std::swap;
        public_key_.Swap(
            &other->public_key_,
            &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
            GetArenaNoVirtual());
        swap(value_, other->value_);
        _internal_metadata_.Swap(&other->_internal_metadata_);
    }

    ::google::protobuf::Metadata Output::GetMetadata() const {
        protobuf_hamilton_2eproto::protobuf_AssignDescriptorsOnce();
        return ::protobuf_hamilton_2eproto::file_level_metadata
            [kIndexInFileMessages];
    }

    // ===================================================================

    void Input::InitAsDefaultInstance() {
        ::transaction::_Input_default_instance_._instance.get_mutable()
            ->outpoint_
            = const_cast<::transaction::Outpoint*>(
                ::transaction::Outpoint::internal_default_instance());
        ::transaction::_Input_default_instance_._instance.get_mutable()
            ->output_
            = const_cast<::transaction::Output*>(
                ::transaction::Output::internal_default_instance());
    }
#if !defined(_MSC_VER) || _MSC_VER >= 1900
    const int Input::kOutpointFieldNumber;
    const int Input::kOutputFieldNumber;
#endif // !defined(_MSC_VER) || _MSC_VER >= 1900

    Input::Input() : ::google::protobuf::Message(), _internal_metadata_(NULL) {
        ::google::protobuf::internal::InitSCC(
            &protobuf_hamilton_2eproto::scc_info_Input.base);
        SharedCtor();
        // @@protoc_insertion_point(constructor:transaction.Input)
    }
    Input::Input(const Input& from)
        : ::google::protobuf::Message(),
          _internal_metadata_(NULL) {
        _internal_metadata_.MergeFrom(from._internal_metadata_);
        if(from.has_outpoint()) {
            outpoint_ = new ::transaction::Outpoint(*from.outpoint_);
        } else {
            outpoint_ = NULL;
        }
        if(from.has_output()) {
            output_ = new ::transaction::Output(*from.output_);
        } else {
            output_ = NULL;
        }
        // @@protoc_insertion_point(copy_constructor:transaction.Input)
    }

    void Input::SharedCtor() {
        ::memset(&outpoint_,
                 0,
                 static_cast<size_t>(reinterpret_cast<char*>(&output_)
                                     - reinterpret_cast<char*>(&outpoint_))
                     + sizeof(output_));
    }

    Input::~Input() {
        // @@protoc_insertion_point(destructor:transaction.Input)
        SharedDtor();
    }

    void Input::SharedDtor() {
        if(this != internal_default_instance())
            delete outpoint_;
        if(this != internal_default_instance())
            delete output_;
    }

    void Input::SetCachedSize(int size) const {
        _cached_size_.Set(size);
    }
    const ::google::protobuf::Descriptor* Input::descriptor() {
        ::protobuf_hamilton_2eproto::protobuf_AssignDescriptorsOnce();
        return ::protobuf_hamilton_2eproto::file_level_metadata
            [kIndexInFileMessages]
                .descriptor;
    }

    const Input& Input::default_instance() {
        ::google::protobuf::internal::InitSCC(
            &protobuf_hamilton_2eproto::scc_info_Input.base);
        return *internal_default_instance();
    }

    void Input::Clear() {
        // @@protoc_insertion_point(message_clear_start:transaction.Input)
        ::google::protobuf::uint32 cached_has_bits = 0;
        // Prevent compiler warnings about cached_has_bits being unused
        (void)cached_has_bits;

        if(GetArenaNoVirtual() == NULL && outpoint_ != NULL) {
            delete outpoint_;
        }
        outpoint_ = NULL;
        if(GetArenaNoVirtual() == NULL && output_ != NULL) {
            delete output_;
        }
        output_ = NULL;
        _internal_metadata_.Clear();
    }

    bool Input::MergePartialFromCodedStream(
        ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION)                  \
    if(!GOOGLE_PREDICT_TRUE(EXPRESSION)) \
    goto failure
        ::google::protobuf::uint32 tag;
        // @@protoc_insertion_point(parse_start:transaction.Input)
        for(;;) {
            ::std::pair<::google::protobuf::uint32, bool> p
                = input->ReadTagWithCutoffNoLastTag(127u);
            tag = p.first;
            if(!p.second)
                goto handle_unusual;
            switch(::google::protobuf::internal::WireFormatLite::
                       GetTagFieldNumber(tag)) {
                // .transaction.Outpoint outpoint = 1;
                case 1: {
                    if(static_cast<::google::protobuf::uint8>(tag)
                       == static_cast<::google::protobuf::uint8>(
                           10u /* 10 & 0xFF */)) {
                        DO_(::google::protobuf::internal::WireFormatLite::
                                ReadMessage(input, mutable_outpoint()));
                    } else {
                        goto handle_unusual;
                    }
                    break;
                }

                // .transaction.Output output = 2;
                case 2: {
                    if(static_cast<::google::protobuf::uint8>(tag)
                       == static_cast<::google::protobuf::uint8>(
                           18u /* 18 & 0xFF */)) {
                        DO_(::google::protobuf::internal::WireFormatLite::
                                ReadMessage(input, mutable_output()));
                    } else {
                        goto handle_unusual;
                    }
                    break;
                }

                default: {
                handle_unusual:
                    if(tag == 0) {
                        goto success;
                    }
                    DO_(::google::protobuf::internal::WireFormat::SkipField(
                        input,
                        tag,
                        _internal_metadata_.mutable_unknown_fields()));
                    break;
                }
            }
        }
    success:
        // @@protoc_insertion_point(parse_success:transaction.Input)
        return true;
    failure:
        // @@protoc_insertion_point(parse_failure:transaction.Input)
        return false;
#undef DO_
    }

    void Input::SerializeWithCachedSizes(
        ::google::protobuf::io::CodedOutputStream* output) const {
        // @@protoc_insertion_point(serialize_start:transaction.Input)
        ::google::protobuf::uint32 cached_has_bits = 0;
        (void)cached_has_bits;

        // .transaction.Outpoint outpoint = 1;
        if(this->has_outpoint()) {
            ::google::protobuf::internal::WireFormatLite::
                WriteMessageMaybeToArray(1,
                                         this->_internal_outpoint(),
                                         output);
        }

        // .transaction.Output output = 2;
        if(this->has_output()) {
            ::google::protobuf::internal::WireFormatLite::
                WriteMessageMaybeToArray(2, this->_internal_output(), output);
        }

        if((_internal_metadata_.have_unknown_fields()
            && ::google::protobuf::internal::
                GetProto3PreserveUnknownsDefault())) {
            ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
                (::google::protobuf::internal::
                         GetProto3PreserveUnknownsDefault()
                     ? _internal_metadata_.unknown_fields()
                     : _internal_metadata_.default_instance()),
                output);
        }
        // @@protoc_insertion_point(serialize_end:transaction.Input)
    }

    ::google::protobuf::uint8* Input::InternalSerializeWithCachedSizesToArray(
        bool deterministic,
        ::google::protobuf::uint8* target) const {
        (void)deterministic; // Unused
        // @@protoc_insertion_point(serialize_to_array_start:transaction.Input)
        ::google::protobuf::uint32 cached_has_bits = 0;
        (void)cached_has_bits;

        // .transaction.Outpoint outpoint = 1;
        if(this->has_outpoint()) {
            target = ::google::protobuf::internal::WireFormatLite::
                InternalWriteMessageToArray(1,
                                            this->_internal_outpoint(),
                                            deterministic,
                                            target);
        }

        // .transaction.Output output = 2;
        if(this->has_output()) {
            target = ::google::protobuf::internal::WireFormatLite::
                InternalWriteMessageToArray(2,
                                            this->_internal_output(),
                                            deterministic,
                                            target);
        }

        if((_internal_metadata_.have_unknown_fields()
            && ::google::protobuf::internal::
                GetProto3PreserveUnknownsDefault())) {
            target = ::google::protobuf::internal::WireFormat::
                SerializeUnknownFieldsToArray(
                    (::google::protobuf::internal::
                             GetProto3PreserveUnknownsDefault()
                         ? _internal_metadata_.unknown_fields()
                         : _internal_metadata_.default_instance()),
                    target);
        }
        // @@protoc_insertion_point(serialize_to_array_end:transaction.Input)
        return target;
    }

    size_t Input::ByteSizeLong() const {
        // @@protoc_insertion_point(message_byte_size_start:transaction.Input)
        size_t total_size = 0;

        if((_internal_metadata_.have_unknown_fields()
            && ::google::protobuf::internal::
                GetProto3PreserveUnknownsDefault())) {
            total_size += ::google::protobuf::internal::WireFormat::
                ComputeUnknownFieldsSize(
                    (::google::protobuf::internal::
                             GetProto3PreserveUnknownsDefault()
                         ? _internal_metadata_.unknown_fields()
                         : _internal_metadata_.default_instance()));
        }
        // .transaction.Outpoint outpoint = 1;
        if(this->has_outpoint()) {
            total_size
                += 1
                 + ::google::protobuf::internal::WireFormatLite::MessageSize(
                       *outpoint_);
        }

        // .transaction.Output output = 2;
        if(this->has_output()) {
            total_size
                += 1
                 + ::google::protobuf::internal::WireFormatLite::MessageSize(
                       *output_);
        }

        int cached_size
            = ::google::protobuf::internal::ToCachedSize(total_size);
        SetCachedSize(cached_size);
        return total_size;
    }

    void Input::MergeFrom(const ::google::protobuf::Message& from) {
        // @@protoc_insertion_point(generalized_merge_from_start:transaction.Input)
        GOOGLE_DCHECK_NE(&from, this);
        const Input* source
            = ::google::protobuf::internal::DynamicCastToGenerated<
                const Input>(&from);
        if(source == NULL) {
            // @@protoc_insertion_point(generalized_merge_from_cast_fail:transaction.Input)
            ::google::protobuf::internal::ReflectionOps::Merge(from, this);
        } else {
            // @@protoc_insertion_point(generalized_merge_from_cast_success:transaction.Input)
            MergeFrom(*source);
        }
    }

    void Input::MergeFrom(const Input& from) {
        // @@protoc_insertion_point(class_specific_merge_from_start:transaction.Input)
        GOOGLE_DCHECK_NE(&from, this);
        _internal_metadata_.MergeFrom(from._internal_metadata_);
        ::google::protobuf::uint32 cached_has_bits = 0;
        (void)cached_has_bits;

        if(from.has_outpoint()) {
            mutable_outpoint()->::transaction::Outpoint::MergeFrom(
                from.outpoint());
        }
        if(from.has_output()) {
            mutable_output()->::transaction::Output::MergeFrom(from.output());
        }
    }

    void Input::CopyFrom(const ::google::protobuf::Message& from) {
        // @@protoc_insertion_point(generalized_copy_from_start:transaction.Input)
        if(&from == this)
            return;
        Clear();
        MergeFrom(from);
    }

    void Input::CopyFrom(const Input& from) {
        // @@protoc_insertion_point(class_specific_copy_from_start:transaction.Input)
        if(&from == this)
            return;
        Clear();
        MergeFrom(from);
    }

    bool Input::IsInitialized() const {
        return true;
    }

    void Input::Swap(Input* other) {
        if(other == this)
            return;
        InternalSwap(other);
    }
    void Input::InternalSwap(Input* other) {
        using std::swap;
        swap(outpoint_, other->outpoint_);
        swap(output_, other->output_);
        _internal_metadata_.Swap(&other->_internal_metadata_);
    }

    ::google::protobuf::Metadata Input::GetMetadata() const {
        protobuf_hamilton_2eproto::protobuf_AssignDescriptorsOnce();
        return ::protobuf_hamilton_2eproto::file_level_metadata
            [kIndexInFileMessages];
    }

    // ===================================================================

    void Witness::InitAsDefaultInstance() {}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
    const int Witness::kSignatureFieldNumber;
#endif // !defined(_MSC_VER) || _MSC_VER >= 1900

    Witness::Witness()
        : ::google::protobuf::Message(),
          _internal_metadata_(NULL) {
        ::google::protobuf::internal::InitSCC(
            &protobuf_hamilton_2eproto::scc_info_Witness.base);
        SharedCtor();
        // @@protoc_insertion_point(constructor:transaction.Witness)
    }
    Witness::Witness(const Witness& from)
        : ::google::protobuf::Message(),
          _internal_metadata_(NULL) {
        _internal_metadata_.MergeFrom(from._internal_metadata_);
        signature_.UnsafeSetDefault(
            &::google::protobuf::internal::GetEmptyStringAlreadyInited());
        if(from.signature().size() > 0) {
            signature_.AssignWithDefault(
                &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
                from.signature_);
        }
        // @@protoc_insertion_point(copy_constructor:transaction.Witness)
    }

    void Witness::SharedCtor() {
        signature_.UnsafeSetDefault(
            &::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }

    Witness::~Witness() {
        // @@protoc_insertion_point(destructor:transaction.Witness)
        SharedDtor();
    }

    void Witness::SharedDtor() {
        signature_.DestroyNoArena(
            &::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }

    void Witness::SetCachedSize(int size) const {
        _cached_size_.Set(size);
    }
    const ::google::protobuf::Descriptor* Witness::descriptor() {
        ::protobuf_hamilton_2eproto::protobuf_AssignDescriptorsOnce();
        return ::protobuf_hamilton_2eproto::file_level_metadata
            [kIndexInFileMessages]
                .descriptor;
    }

    const Witness& Witness::default_instance() {
        ::google::protobuf::internal::InitSCC(
            &protobuf_hamilton_2eproto::scc_info_Witness.base);
        return *internal_default_instance();
    }

    void Witness::Clear() {
        // @@protoc_insertion_point(message_clear_start:transaction.Witness)
        ::google::protobuf::uint32 cached_has_bits = 0;
        // Prevent compiler warnings about cached_has_bits being unused
        (void)cached_has_bits;

        signature_.ClearToEmptyNoArena(
            &::google::protobuf::internal::GetEmptyStringAlreadyInited());
        _internal_metadata_.Clear();
    }

    bool Witness::MergePartialFromCodedStream(
        ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION)                  \
    if(!GOOGLE_PREDICT_TRUE(EXPRESSION)) \
    goto failure
        ::google::protobuf::uint32 tag;
        // @@protoc_insertion_point(parse_start:transaction.Witness)
        for(;;) {
            ::std::pair<::google::protobuf::uint32, bool> p
                = input->ReadTagWithCutoffNoLastTag(127u);
            tag = p.first;
            if(!p.second)
                goto handle_unusual;
            switch(::google::protobuf::internal::WireFormatLite::
                       GetTagFieldNumber(tag)) {
                // bytes signature = 1;
                case 1: {
                    if(static_cast<::google::protobuf::uint8>(tag)
                       == static_cast<::google::protobuf::uint8>(
                           10u /* 10 & 0xFF */)) {
                        DO_(::google::protobuf::internal::WireFormatLite::
                                ReadBytes(input, this->mutable_signature()));
                    } else {
                        goto handle_unusual;
                    }
                    break;
                }

                default: {
                handle_unusual:
                    if(tag == 0) {
                        goto success;
                    }
                    DO_(::google::protobuf::internal::WireFormat::SkipField(
                        input,
                        tag,
                        _internal_metadata_.mutable_unknown_fields()));
                    break;
                }
            }
        }
    success:
        // @@protoc_insertion_point(parse_success:transaction.Witness)
        return true;
    failure:
        // @@protoc_insertion_point(parse_failure:transaction.Witness)
        return false;
#undef DO_
    }

    void Witness::SerializeWithCachedSizes(
        ::google::protobuf::io::CodedOutputStream* output) const {
        // @@protoc_insertion_point(serialize_start:transaction.Witness)
        ::google::protobuf::uint32 cached_has_bits = 0;
        (void)cached_has_bits;

        // bytes signature = 1;
        if(this->signature().size() > 0) {
            ::google::protobuf::internal::WireFormatLite::
                WriteBytesMaybeAliased(1, this->signature(), output);
        }

        if((_internal_metadata_.have_unknown_fields()
            && ::google::protobuf::internal::
                GetProto3PreserveUnknownsDefault())) {
            ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
                (::google::protobuf::internal::
                         GetProto3PreserveUnknownsDefault()
                     ? _internal_metadata_.unknown_fields()
                     : _internal_metadata_.default_instance()),
                output);
        }
        // @@protoc_insertion_point(serialize_end:transaction.Witness)
    }

    ::google::protobuf::uint8*
    Witness::InternalSerializeWithCachedSizesToArray(
        bool deterministic,
        ::google::protobuf::uint8* target) const {
        (void)deterministic; // Unused
        // @@protoc_insertion_point(serialize_to_array_start:transaction.Witness)
        ::google::protobuf::uint32 cached_has_bits = 0;
        (void)cached_has_bits;

        // bytes signature = 1;
        if(this->signature().size() > 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteBytesToArray(1, this->signature(), target);
        }

        if((_internal_metadata_.have_unknown_fields()
            && ::google::protobuf::internal::
                GetProto3PreserveUnknownsDefault())) {
            target = ::google::protobuf::internal::WireFormat::
                SerializeUnknownFieldsToArray(
                    (::google::protobuf::internal::
                             GetProto3PreserveUnknownsDefault()
                         ? _internal_metadata_.unknown_fields()
                         : _internal_metadata_.default_instance()),
                    target);
        }
        // @@protoc_insertion_point(serialize_to_array_end:transaction.Witness)
        return target;
    }

    size_t Witness::ByteSizeLong() const {
        // @@protoc_insertion_point(message_byte_size_start:transaction.Witness)
        size_t total_size = 0;

        if((_internal_metadata_.have_unknown_fields()
            && ::google::protobuf::internal::
                GetProto3PreserveUnknownsDefault())) {
            total_size += ::google::protobuf::internal::WireFormat::
                ComputeUnknownFieldsSize(
                    (::google::protobuf::internal::
                             GetProto3PreserveUnknownsDefault()
                         ? _internal_metadata_.unknown_fields()
                         : _internal_metadata_.default_instance()));
        }
        // bytes signature = 1;
        if(this->signature().size() > 0) {
            total_size
                += 1
                 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                       this->signature());
        }

        int cached_size
            = ::google::protobuf::internal::ToCachedSize(total_size);
        SetCachedSize(cached_size);
        return total_size;
    }

    void Witness::MergeFrom(const ::google::protobuf::Message& from) {
        // @@protoc_insertion_point(generalized_merge_from_start:transaction.Witness)
        GOOGLE_DCHECK_NE(&from, this);
        const Witness* source
            = ::google::protobuf::internal::DynamicCastToGenerated<
                const Witness>(&from);
        if(source == NULL) {
            // @@protoc_insertion_point(generalized_merge_from_cast_fail:transaction.Witness)
            ::google::protobuf::internal::ReflectionOps::Merge(from, this);
        } else {
            // @@protoc_insertion_point(generalized_merge_from_cast_success:transaction.Witness)
            MergeFrom(*source);
        }
    }

    void Witness::MergeFrom(const Witness& from) {
        // @@protoc_insertion_point(class_specific_merge_from_start:transaction.Witness)
        GOOGLE_DCHECK_NE(&from, this);
        _internal_metadata_.MergeFrom(from._internal_metadata_);
        ::google::protobuf::uint32 cached_has_bits = 0;
        (void)cached_has_bits;

        if(from.signature().size() > 0) {
            signature_.AssignWithDefault(
                &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
                from.signature_);
        }
    }

    void Witness::CopyFrom(const ::google::protobuf::Message& from) {
        // @@protoc_insertion_point(generalized_copy_from_start:transaction.Witness)
        if(&from == this)
            return;
        Clear();
        MergeFrom(from);
    }

    void Witness::CopyFrom(const Witness& from) {
        // @@protoc_insertion_point(class_specific_copy_from_start:transaction.Witness)
        if(&from == this)
            return;
        Clear();
        MergeFrom(from);
    }

    bool Witness::IsInitialized() const {
        return true;
    }

    void Witness::Swap(Witness* other) {
        if(other == this)
            return;
        InternalSwap(other);
    }
    void Witness::InternalSwap(Witness* other) {
        using std::swap;
        signature_.Swap(
            &other->signature_,
            &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
            GetArenaNoVirtual());
        _internal_metadata_.Swap(&other->_internal_metadata_);
    }

    ::google::protobuf::Metadata Witness::GetMetadata() const {
        protobuf_hamilton_2eproto::protobuf_AssignDescriptorsOnce();
        return ::protobuf_hamilton_2eproto::file_level_metadata
            [kIndexInFileMessages];
    }

    // ===================================================================

    void Transaction::InitAsDefaultInstance() {}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
    const int Transaction::kInputsFieldNumber;
    const int Transaction::kOutputsFieldNumber;
    const int Transaction::kWitnessesFieldNumber;
#endif // !defined(_MSC_VER) || _MSC_VER >= 1900

    Transaction::Transaction()
        : ::google::protobuf::Message(),
          _internal_metadata_(NULL) {
        ::google::protobuf::internal::InitSCC(
            &protobuf_hamilton_2eproto::scc_info_Transaction.base);
        SharedCtor();
        // @@protoc_insertion_point(constructor:transaction.Transaction)
    }
    Transaction::Transaction(const Transaction& from)
        : ::google::protobuf::Message(),
          _internal_metadata_(NULL),
          inputs_(from.inputs_),
          outputs_(from.outputs_),
          witnesses_(from.witnesses_) {
        _internal_metadata_.MergeFrom(from._internal_metadata_);
        // @@protoc_insertion_point(copy_constructor:transaction.Transaction)
    }

    cbdc::transaction::full_tx Transaction::to_full_tx() {
        std::vector<cbdc::transaction::input> new_inputs;
        std::vector<cbdc::transaction::output> new_outputs;
        std::vector<std::vector<std::byte>> new_witnesses;

        // Inputs
        for(int i = 0; i < this->inputs().size(); i++) {
            auto input = this->inputs()[i];
            cbdc::transaction::output new_output;
            cbdc::transaction::out_point new_outpoint;
            cbdc::transaction::input new_input;
            std::string witness_str = input.output().public_key();
            std::vector<uint8_t> witness(witness_str.begin(),
                                         witness_str.end());
            std::string tx_id_str = input.outpoint().transaction_id();
            std::vector<uint8_t> tx_id(tx_id_str.begin(), tx_id_str.end());

            new_output.m_witness_program_commitment
                = std::array<unsigned char, 32>();
            new_outpoint.m_tx_id = std::array<unsigned char, 32>();
            for(unsigned long j = 0; j < witness.size(); j++) {
                new_output.m_witness_program_commitment[j] = witness[j];
            }
            for(unsigned long j = 0; j < tx_id.size(); j++) {
                std::cout << tx_id[j] << ", ";
                new_outpoint.m_tx_id[j] = tx_id[j];
            }
            std::cout << std::endl;
            new_output.m_value = input.output().value();
            new_outpoint.m_index = input.outpoint().index();
            new_input.m_prevout = new_outpoint;
            new_input.m_prevout_data = new_output;
            new_inputs.push_back(new_input);
        }
        // Outputs
        for(int i = 0; i < this->outputs().size(); i++) {
            auto output = this->outputs()[i];
            cbdc::transaction::output new_output;
            std::string witness_str = output.public_key();
            std::vector<uint8_t> witness(witness_str.begin(),
                                         witness_str.end());

            new_output.m_witness_program_commitment
                = std::array<unsigned char, 32>();
            for(unsigned long j = 0; j < witness.size(); j++) {
                new_output.m_witness_program_commitment[j] = witness[j];
            }

            new_output.m_value = output.value();
            new_outputs.push_back(new_output);
        }
        // Witnesses
        for(int i = 0; i < this->witnesses().size(); i++) {
            auto witness = this->witnesses()[i];
            std::vector<std::byte> new_witness;
            std::string signature_str = witness.signature();
            std::vector<uint8_t> signature(signature_str.begin(),
                                           signature_str.end());

            for(unsigned long j = 0; j < signature.size(); j++) {
                new_witness.push_back((std::byte)(signature[j]));
            }
            new_witnesses.push_back(new_witness);
        }
        cbdc::transaction::full_tx ret{
            new_inputs,
            new_outputs,
            new_witnesses,
        };

        return ret;
    }

    void Transaction::SharedCtor() {}

    Transaction::~Transaction() {
        // @@protoc_insertion_point(destructor:transaction.Transaction)
        SharedDtor();
    }

    void Transaction::SharedDtor() {}

    void Transaction::SetCachedSize(int size) const {
        _cached_size_.Set(size);
    }
    const ::google::protobuf::Descriptor* Transaction::descriptor() {
        ::protobuf_hamilton_2eproto::protobuf_AssignDescriptorsOnce();
        return ::protobuf_hamilton_2eproto::file_level_metadata
            [kIndexInFileMessages]
                .descriptor;
    }

    const Transaction& Transaction::default_instance() {
        ::google::protobuf::internal::InitSCC(
            &protobuf_hamilton_2eproto::scc_info_Transaction.base);
        return *internal_default_instance();
    }

    void Transaction::Clear() {
        // @@protoc_insertion_point(message_clear_start:transaction.Transaction)
        ::google::protobuf::uint32 cached_has_bits = 0;
        // Prevent compiler warnings about cached_has_bits being unused
        (void)cached_has_bits;

        inputs_.Clear();
        outputs_.Clear();
        witnesses_.Clear();
        _internal_metadata_.Clear();
    }

    bool Transaction::MergePartialFromCodedStream(
        ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION)                  \
    if(!GOOGLE_PREDICT_TRUE(EXPRESSION)) \
    goto failure
        ::google::protobuf::uint32 tag;
        // @@protoc_insertion_point(parse_start:transaction.Transaction)
        for(;;) {
            ::std::pair<::google::protobuf::uint32, bool> p
                = input->ReadTagWithCutoffNoLastTag(127u);
            tag = p.first;
            if(!p.second)
                goto handle_unusual;
            switch(::google::protobuf::internal::WireFormatLite::
                       GetTagFieldNumber(tag)) {
                // repeated .transaction.Input inputs = 1;
                case 1: {
                    if(static_cast<::google::protobuf::uint8>(tag)
                       == static_cast<::google::protobuf::uint8>(
                           10u /* 10 & 0xFF */)) {
                        DO_(::google::protobuf::internal::WireFormatLite::
                                ReadMessage(input, add_inputs()));
                    } else {
                        goto handle_unusual;
                    }
                    break;
                }

                // repeated .transaction.Output outputs = 2;
                case 2: {
                    if(static_cast<::google::protobuf::uint8>(tag)
                       == static_cast<::google::protobuf::uint8>(
                           18u /* 18 & 0xFF */)) {
                        DO_(::google::protobuf::internal::WireFormatLite::
                                ReadMessage(input, add_outputs()));
                    } else {
                        goto handle_unusual;
                    }
                    break;
                }

                // repeated .transaction.Witness witnesses = 3;
                case 3: {
                    if(static_cast<::google::protobuf::uint8>(tag)
                       == static_cast<::google::protobuf::uint8>(
                           26u /* 26 & 0xFF */)) {
                        DO_(::google::protobuf::internal::WireFormatLite::
                                ReadMessage(input, add_witnesses()));
                    } else {
                        goto handle_unusual;
                    }
                    break;
                }

                default: {
                handle_unusual:
                    if(tag == 0) {
                        goto success;
                    }
                    DO_(::google::protobuf::internal::WireFormat::SkipField(
                        input,
                        tag,
                        _internal_metadata_.mutable_unknown_fields()));
                    break;
                }
            }
        }
    success:
        // @@protoc_insertion_point(parse_success:transaction.Transaction)
        return true;
    failure:
        // @@protoc_insertion_point(parse_failure:transaction.Transaction)
        return false;
#undef DO_
    }

    void Transaction::SerializeWithCachedSizes(
        ::google::protobuf::io::CodedOutputStream* output) const {
        // @@protoc_insertion_point(serialize_start:transaction.Transaction)
        ::google::protobuf::uint32 cached_has_bits = 0;
        (void)cached_has_bits;

        // repeated .transaction.Input inputs = 1;
        for(unsigned int i = 0,
                         n = static_cast<unsigned int>(this->inputs_size());
            i < n;
            i++) {
            ::google::protobuf::internal::WireFormatLite::
                WriteMessageMaybeToArray(1,
                                         this->inputs(static_cast<int>(i)),
                                         output);
        }

        // repeated .transaction.Output outputs = 2;
        for(unsigned int i = 0,
                         n = static_cast<unsigned int>(this->outputs_size());
            i < n;
            i++) {
            ::google::protobuf::internal::WireFormatLite::
                WriteMessageMaybeToArray(2,
                                         this->outputs(static_cast<int>(i)),
                                         output);
        }

        // repeated .transaction.Witness witnesses = 3;
        for(unsigned int i = 0,
                         n = static_cast<unsigned int>(this->witnesses_size());
            i < n;
            i++) {
            ::google::protobuf::internal::WireFormatLite::
                WriteMessageMaybeToArray(3,
                                         this->witnesses(static_cast<int>(i)),
                                         output);
        }

        if((_internal_metadata_.have_unknown_fields()
            && ::google::protobuf::internal::
                GetProto3PreserveUnknownsDefault())) {
            ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
                (::google::protobuf::internal::
                         GetProto3PreserveUnknownsDefault()
                     ? _internal_metadata_.unknown_fields()
                     : _internal_metadata_.default_instance()),
                output);
        }
        // @@protoc_insertion_point(serialize_end:transaction.Transaction)
    }

    ::google::protobuf::uint8*
    Transaction::InternalSerializeWithCachedSizesToArray(
        bool deterministic,
        ::google::protobuf::uint8* target) const {
        (void)deterministic; // Unused
        // @@protoc_insertion_point(serialize_to_array_start:transaction.Transaction)
        ::google::protobuf::uint32 cached_has_bits = 0;
        (void)cached_has_bits;

        // repeated .transaction.Input inputs = 1;
        for(unsigned int i = 0,
                         n = static_cast<unsigned int>(this->inputs_size());
            i < n;
            i++) {
            target = ::google::protobuf::internal::WireFormatLite::
                InternalWriteMessageToArray(1,
                                            this->inputs(static_cast<int>(i)),
                                            deterministic,
                                            target);
        }

        // repeated .transaction.Output outputs = 2;
        for(unsigned int i = 0,
                         n = static_cast<unsigned int>(this->outputs_size());
            i < n;
            i++) {
            target = ::google::protobuf::internal::WireFormatLite::
                InternalWriteMessageToArray(2,
                                            this->outputs(static_cast<int>(i)),
                                            deterministic,
                                            target);
        }

        // repeated .transaction.Witness witnesses = 3;
        for(unsigned int i = 0,
                         n = static_cast<unsigned int>(this->witnesses_size());
            i < n;
            i++) {
            target = ::google::protobuf::internal::WireFormatLite::
                InternalWriteMessageToArray(
                    3,
                    this->witnesses(static_cast<int>(i)),
                    deterministic,
                    target);
        }

        if((_internal_metadata_.have_unknown_fields()
            && ::google::protobuf::internal::
                GetProto3PreserveUnknownsDefault())) {
            target = ::google::protobuf::internal::WireFormat::
                SerializeUnknownFieldsToArray(
                    (::google::protobuf::internal::
                             GetProto3PreserveUnknownsDefault()
                         ? _internal_metadata_.unknown_fields()
                         : _internal_metadata_.default_instance()),
                    target);
        }
        // @@protoc_insertion_point(serialize_to_array_end:transaction.Transaction)
        return target;
    }

    size_t Transaction::ByteSizeLong() const {
        // @@protoc_insertion_point(message_byte_size_start:transaction.Transaction)
        size_t total_size = 0;

        if((_internal_metadata_.have_unknown_fields()
            && ::google::protobuf::internal::
                GetProto3PreserveUnknownsDefault())) {
            total_size += ::google::protobuf::internal::WireFormat::
                ComputeUnknownFieldsSize(
                    (::google::protobuf::internal::
                             GetProto3PreserveUnknownsDefault()
                         ? _internal_metadata_.unknown_fields()
                         : _internal_metadata_.default_instance()));
        }
        // repeated .transaction.Input inputs = 1;
        {
            unsigned int count
                = static_cast<unsigned int>(this->inputs_size());
            total_size += 1UL * count;
            for(unsigned int i = 0; i < count; i++) {
                total_size += ::google::protobuf::internal::WireFormatLite::
                    MessageSize(this->inputs(static_cast<int>(i)));
            }
        }

        // repeated .transaction.Output outputs = 2;
        {
            unsigned int count
                = static_cast<unsigned int>(this->outputs_size());
            total_size += 1UL * count;
            for(unsigned int i = 0; i < count; i++) {
                total_size += ::google::protobuf::internal::WireFormatLite::
                    MessageSize(this->outputs(static_cast<int>(i)));
            }
        }

        // repeated .transaction.Witness witnesses = 3;
        {
            unsigned int count
                = static_cast<unsigned int>(this->witnesses_size());
            total_size += 1UL * count;
            for(unsigned int i = 0; i < count; i++) {
                total_size += ::google::protobuf::internal::WireFormatLite::
                    MessageSize(this->witnesses(static_cast<int>(i)));
            }
        }

        int cached_size
            = ::google::protobuf::internal::ToCachedSize(total_size);
        SetCachedSize(cached_size);
        return total_size;
    }

    void Transaction::MergeFrom(const ::google::protobuf::Message& from) {
        // @@protoc_insertion_point(generalized_merge_from_start:transaction.Transaction)
        GOOGLE_DCHECK_NE(&from, this);
        const Transaction* source
            = ::google::protobuf::internal::DynamicCastToGenerated<
                const Transaction>(&from);
        if(source == NULL) {
            // @@protoc_insertion_point(generalized_merge_from_cast_fail:transaction.Transaction)
            ::google::protobuf::internal::ReflectionOps::Merge(from, this);
        } else {
            // @@protoc_insertion_point(generalized_merge_from_cast_success:transaction.Transaction)
            MergeFrom(*source);
        }
    }

    void Transaction::MergeFrom(const Transaction& from) {
        // @@protoc_insertion_point(class_specific_merge_from_start:transaction.Transaction)
        GOOGLE_DCHECK_NE(&from, this);
        _internal_metadata_.MergeFrom(from._internal_metadata_);
        ::google::protobuf::uint32 cached_has_bits = 0;
        (void)cached_has_bits;

        inputs_.MergeFrom(from.inputs_);
        outputs_.MergeFrom(from.outputs_);
        witnesses_.MergeFrom(from.witnesses_);
    }

    void Transaction::CopyFrom(const ::google::protobuf::Message& from) {
        // @@protoc_insertion_point(generalized_copy_from_start:transaction.Transaction)
        if(&from == this)
            return;
        Clear();
        MergeFrom(from);
    }

    void Transaction::CopyFrom(const Transaction& from) {
        // @@protoc_insertion_point(class_specific_copy_from_start:transaction.Transaction)
        if(&from == this)
            return;
        Clear();
        MergeFrom(from);
    }

    bool Transaction::IsInitialized() const {
        return true;
    }

    void Transaction::Swap(Transaction* other) {
        if(other == this)
            return;
        InternalSwap(other);
    }
    void Transaction::InternalSwap(Transaction* other) {
        using std::swap;
        CastToBase(&inputs_)->InternalSwap(CastToBase(&other->inputs_));
        CastToBase(&outputs_)->InternalSwap(CastToBase(&other->outputs_));
        CastToBase(&witnesses_)->InternalSwap(CastToBase(&other->witnesses_));
        _internal_metadata_.Swap(&other->_internal_metadata_);
    }

    ::google::protobuf::Metadata Transaction::GetMetadata() const {
        protobuf_hamilton_2eproto::protobuf_AssignDescriptorsOnce();
        return ::protobuf_hamilton_2eproto::file_level_metadata
            [kIndexInFileMessages];
    }

    // ===================================================================

    void TransactionResponse::InitAsDefaultInstance() {}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
    const int TransactionResponse::kMessageFieldNumber;
#endif // !defined(_MSC_VER) || _MSC_VER >= 1900

    TransactionResponse::TransactionResponse()
        : ::google::protobuf::Message(),
          _internal_metadata_(NULL) {
        ::google::protobuf::internal::InitSCC(
            &protobuf_hamilton_2eproto::scc_info_TransactionResponse.base);
        SharedCtor();
        // @@protoc_insertion_point(constructor:transaction.TransactionResponse)
    }
    TransactionResponse::TransactionResponse(const TransactionResponse& from)
        : ::google::protobuf::Message(),
          _internal_metadata_(NULL) {
        _internal_metadata_.MergeFrom(from._internal_metadata_);
        message_.UnsafeSetDefault(
            &::google::protobuf::internal::GetEmptyStringAlreadyInited());
        if(from.message().size() > 0) {
            message_.AssignWithDefault(
                &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
                from.message_);
        }
        // @@protoc_insertion_point(copy_constructor:transaction.TransactionResponse)
    }

    void TransactionResponse::SharedCtor() {
        message_.UnsafeSetDefault(
            &::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }

    TransactionResponse::~TransactionResponse() {
        // @@protoc_insertion_point(destructor:transaction.TransactionResponse)
        SharedDtor();
    }

    void TransactionResponse::SharedDtor() {
        message_.DestroyNoArena(
            &::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }

    void TransactionResponse::SetCachedSize(int size) const {
        _cached_size_.Set(size);
    }
    const ::google::protobuf::Descriptor* TransactionResponse::descriptor() {
        ::protobuf_hamilton_2eproto::protobuf_AssignDescriptorsOnce();
        return ::protobuf_hamilton_2eproto::file_level_metadata
            [kIndexInFileMessages]
                .descriptor;
    }

    const TransactionResponse& TransactionResponse::default_instance() {
        ::google::protobuf::internal::InitSCC(
            &protobuf_hamilton_2eproto::scc_info_TransactionResponse.base);
        return *internal_default_instance();
    }

    void TransactionResponse::Clear() {
        // @@protoc_insertion_point(message_clear_start:transaction.TransactionResponse)
        ::google::protobuf::uint32 cached_has_bits = 0;
        // Prevent compiler warnings about cached_has_bits being unused
        (void)cached_has_bits;

        message_.ClearToEmptyNoArena(
            &::google::protobuf::internal::GetEmptyStringAlreadyInited());
        _internal_metadata_.Clear();
    }

    bool TransactionResponse::MergePartialFromCodedStream(
        ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION)                  \
    if(!GOOGLE_PREDICT_TRUE(EXPRESSION)) \
    goto failure
        ::google::protobuf::uint32 tag;
        // @@protoc_insertion_point(parse_start:transaction.TransactionResponse)
        for(;;) {
            ::std::pair<::google::protobuf::uint32, bool> p
                = input->ReadTagWithCutoffNoLastTag(127u);
            tag = p.first;
            if(!p.second)
                goto handle_unusual;
            switch(::google::protobuf::internal::WireFormatLite::
                       GetTagFieldNumber(tag)) {
                // string message = 1;
                case 1: {
                    if(static_cast<::google::protobuf::uint8>(tag)
                       == static_cast<::google::protobuf::uint8>(
                           10u /* 10 & 0xFF */)) {
                        DO_(::google::protobuf::internal::WireFormatLite::
                                ReadString(input, this->mutable_message()));
                        DO_(::google::protobuf::internal::WireFormatLite::
                                VerifyUtf8String(
                                    this->message().data(),
                                    static_cast<int>(this->message().length()),
                                    ::google::protobuf::internal::
                                        WireFormatLite::PARSE,
                                    "transaction.TransactionResponse."
                                    "message"));
                    } else {
                        goto handle_unusual;
                    }
                    break;
                }

                default: {
                handle_unusual:
                    if(tag == 0) {
                        goto success;
                    }
                    DO_(::google::protobuf::internal::WireFormat::SkipField(
                        input,
                        tag,
                        _internal_metadata_.mutable_unknown_fields()));
                    break;
                }
            }
        }
    success:
        // @@protoc_insertion_point(parse_success:transaction.TransactionResponse)
        return true;
    failure:
        // @@protoc_insertion_point(parse_failure:transaction.TransactionResponse)
        return false;
#undef DO_
    }

    void TransactionResponse::SerializeWithCachedSizes(
        ::google::protobuf::io::CodedOutputStream* output) const {
        // @@protoc_insertion_point(serialize_start:transaction.TransactionResponse)
        ::google::protobuf::uint32 cached_has_bits = 0;
        (void)cached_has_bits;

        // string message = 1;
        if(this->message().size() > 0) {
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                this->message().data(),
                static_cast<int>(this->message().length()),
                ::google::protobuf::internal::WireFormatLite::SERIALIZE,
                "transaction.TransactionResponse.message");
            ::google::protobuf::internal::WireFormatLite::
                WriteStringMaybeAliased(1, this->message(), output);
        }

        if((_internal_metadata_.have_unknown_fields()
            && ::google::protobuf::internal::
                GetProto3PreserveUnknownsDefault())) {
            ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
                (::google::protobuf::internal::
                         GetProto3PreserveUnknownsDefault()
                     ? _internal_metadata_.unknown_fields()
                     : _internal_metadata_.default_instance()),
                output);
        }
        // @@protoc_insertion_point(serialize_end:transaction.TransactionResponse)
    }

    ::google::protobuf::uint8*
    TransactionResponse::InternalSerializeWithCachedSizesToArray(
        bool deterministic,
        ::google::protobuf::uint8* target) const {
        (void)deterministic; // Unused
        // @@protoc_insertion_point(serialize_to_array_start:transaction.TransactionResponse)
        ::google::protobuf::uint32 cached_has_bits = 0;
        (void)cached_has_bits;

        // string message = 1;
        if(this->message().size() > 0) {
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                this->message().data(),
                static_cast<int>(this->message().length()),
                ::google::protobuf::internal::WireFormatLite::SERIALIZE,
                "transaction.TransactionResponse.message");
            target = ::google::protobuf::internal::WireFormatLite::
                WriteStringToArray(1, this->message(), target);
        }

        if((_internal_metadata_.have_unknown_fields()
            && ::google::protobuf::internal::
                GetProto3PreserveUnknownsDefault())) {
            target = ::google::protobuf::internal::WireFormat::
                SerializeUnknownFieldsToArray(
                    (::google::protobuf::internal::
                             GetProto3PreserveUnknownsDefault()
                         ? _internal_metadata_.unknown_fields()
                         : _internal_metadata_.default_instance()),
                    target);
        }
        // @@protoc_insertion_point(serialize_to_array_end:transaction.TransactionResponse)
        return target;
    }

    size_t TransactionResponse::ByteSizeLong() const {
        // @@protoc_insertion_point(message_byte_size_start:transaction.TransactionResponse)
        size_t total_size = 0;

        if((_internal_metadata_.have_unknown_fields()
            && ::google::protobuf::internal::
                GetProto3PreserveUnknownsDefault())) {
            total_size += ::google::protobuf::internal::WireFormat::
                ComputeUnknownFieldsSize(
                    (::google::protobuf::internal::
                             GetProto3PreserveUnknownsDefault()
                         ? _internal_metadata_.unknown_fields()
                         : _internal_metadata_.default_instance()));
        }
        // string message = 1;
        if(this->message().size() > 0) {
            total_size
                += 1
                 + ::google::protobuf::internal::WireFormatLite::StringSize(
                       this->message());
        }

        int cached_size
            = ::google::protobuf::internal::ToCachedSize(total_size);
        SetCachedSize(cached_size);
        return total_size;
    }

    void
    TransactionResponse::MergeFrom(const ::google::protobuf::Message& from) {
        // @@protoc_insertion_point(generalized_merge_from_start:transaction.TransactionResponse)
        GOOGLE_DCHECK_NE(&from, this);
        const TransactionResponse* source
            = ::google::protobuf::internal::DynamicCastToGenerated<
                const TransactionResponse>(&from);
        if(source == NULL) {
            // @@protoc_insertion_point(generalized_merge_from_cast_fail:transaction.TransactionResponse)
            ::google::protobuf::internal::ReflectionOps::Merge(from, this);
        } else {
            // @@protoc_insertion_point(generalized_merge_from_cast_success:transaction.TransactionResponse)
            MergeFrom(*source);
        }
    }

    void TransactionResponse::MergeFrom(const TransactionResponse& from) {
        // @@protoc_insertion_point(class_specific_merge_from_start:transaction.TransactionResponse)
        GOOGLE_DCHECK_NE(&from, this);
        _internal_metadata_.MergeFrom(from._internal_metadata_);
        ::google::protobuf::uint32 cached_has_bits = 0;
        (void)cached_has_bits;

        if(from.message().size() > 0) {
            message_.AssignWithDefault(
                &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
                from.message_);
        }
    }

    void
    TransactionResponse::CopyFrom(const ::google::protobuf::Message& from) {
        // @@protoc_insertion_point(generalized_copy_from_start:transaction.TransactionResponse)
        if(&from == this)
            return;
        Clear();
        MergeFrom(from);
    }

    void TransactionResponse::CopyFrom(const TransactionResponse& from) {
        // @@protoc_insertion_point(class_specific_copy_from_start:transaction.TransactionResponse)
        if(&from == this)
            return;
        Clear();
        MergeFrom(from);
    }

    bool TransactionResponse::IsInitialized() const {
        return true;
    }

    void TransactionResponse::Swap(TransactionResponse* other) {
        if(other == this)
            return;
        InternalSwap(other);
    }
    void TransactionResponse::InternalSwap(TransactionResponse* other) {
        using std::swap;
        message_.Swap(
            &other->message_,
            &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
            GetArenaNoVirtual());
        _internal_metadata_.Swap(&other->_internal_metadata_);
    }

    ::google::protobuf::Metadata TransactionResponse::GetMetadata() const {
        protobuf_hamilton_2eproto::protobuf_AssignDescriptorsOnce();
        return ::protobuf_hamilton_2eproto::file_level_metadata
            [kIndexInFileMessages];
    }

    // @@protoc_insertion_point(namespace_scope)
} // namespace transaction
namespace google {
    namespace protobuf {
        template<>
        GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::transaction::Outpoint*
        Arena::CreateMaybeMessage<::transaction::Outpoint>(Arena* arena) {
            return Arena::CreateInternal<::transaction::Outpoint>(arena);
        }
        template<>
        GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::transaction::Output*
        Arena::CreateMaybeMessage<::transaction::Output>(Arena* arena) {
            return Arena::CreateInternal<::transaction::Output>(arena);
        }
        template<>
        GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::transaction::Input*
        Arena::CreateMaybeMessage<::transaction::Input>(Arena* arena) {
            return Arena::CreateInternal<::transaction::Input>(arena);
        }
        template<>
        GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::transaction::Witness*
        Arena::CreateMaybeMessage<::transaction::Witness>(Arena* arena) {
            return Arena::CreateInternal<::transaction::Witness>(arena);
        }
        template<>
        GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::transaction::Transaction*
        Arena::CreateMaybeMessage<::transaction::Transaction>(Arena* arena) {
            return Arena::CreateInternal<::transaction::Transaction>(arena);
        }
        template<>
        GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::transaction::TransactionResponse*
        Arena::CreateMaybeMessage<::transaction::TransactionResponse>(
            Arena* arena) {
            return Arena::CreateInternal<::transaction::TransactionResponse>(
                arena);
        }
    } // namespace protobuf
} // namespace google

// @@protoc_insertion_point(global_scope)
