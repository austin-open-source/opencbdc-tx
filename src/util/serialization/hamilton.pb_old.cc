// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: hamilton.proto

#include "hamilton.pb.hpp"

#include <algorithm>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/wire_format.h>
#include <google/protobuf/wire_format_lite_inl.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

#include "uhs/transaction/transaction.hpp"
#include "util/rpc/messages.hpp"

#include <iostream>

namespace protobuf_hamilton_2eproto {
    extern PROTOBUF_INTERNAL_EXPORT_protobuf_hamilton_2eproto ::google::
        protobuf::internal::SCCInfo<0>
            scc_info_OutPoint;
    extern PROTOBUF_INTERNAL_EXPORT_protobuf_hamilton_2eproto ::google::
        protobuf::internal::SCCInfo<0>
            scc_info_Output;
    extern PROTOBUF_INTERNAL_EXPORT_protobuf_hamilton_2eproto ::google::
        protobuf::internal::SCCInfo<2>
            scc_info_Input;
} // namespace protobuf_hamilton_2eproto
namespace proto {
    namespace hamilton {
        class OutPointDefaultTypeInternal {
          public:
            ::google::protobuf::internal::ExplicitlyConstructed<OutPoint>
                _instance;
        } _OutPoint_default_instance_;
        class OutputDefaultTypeInternal {
          public:
            ::google::protobuf::internal::ExplicitlyConstructed<Output>
                _instance;
        } _Output_default_instance_;
        class InputDefaultTypeInternal {
          public:
            ::google::protobuf::internal::ExplicitlyConstructed<Input>
                _instance;
        } _Input_default_instance_;
        class TxRequestDefaultTypeInternal {
          public:
            ::google::protobuf::internal::ExplicitlyConstructed<TxRequest>
                _instance;
        } _TxRequest_default_instance_;
        class TxResponseDefaultTypeInternal {
          public:
            ::google::protobuf::internal::ExplicitlyConstructed<TxResponse>
                _instance;
        } _TxResponse_default_instance_;
    } // namespace hamilton
} // namespace proto
namespace protobuf_hamilton_2eproto {
    static void InitDefaultsOutPoint() {
        GOOGLE_PROTOBUF_VERIFY_VERSION;

        {
            void* ptr = &::proto::hamilton::_OutPoint_default_instance_;
            new(ptr)::proto::hamilton::OutPoint();
            ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
        }
        ::proto::hamilton::OutPoint::InitAsDefaultInstance();
    }

    ::google::protobuf::internal::SCCInfo<0> scc_info_OutPoint
        = {{ATOMIC_VAR_INIT(
                ::google::protobuf::internal::SCCInfoBase::kUninitialized),
            0,
            InitDefaultsOutPoint},
           {}};

    static void InitDefaultsOutput() {
        GOOGLE_PROTOBUF_VERIFY_VERSION;

        {
            void* ptr = &::proto::hamilton::_Output_default_instance_;
            new(ptr)::proto::hamilton::Output();
            ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
        }
        ::proto::hamilton::Output::InitAsDefaultInstance();
    }

    ::google::protobuf::internal::SCCInfo<0> scc_info_Output
        = {{ATOMIC_VAR_INIT(
                ::google::protobuf::internal::SCCInfoBase::kUninitialized),
            0,
            InitDefaultsOutput},
           {}};

    static void InitDefaultsInput() {
        GOOGLE_PROTOBUF_VERIFY_VERSION;

        {
            void* ptr = &::proto::hamilton::_Input_default_instance_;
            new(ptr)::proto::hamilton::Input();
            ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
        }
        ::proto::hamilton::Input::InitAsDefaultInstance();
    }

    ::google::protobuf::internal::SCCInfo<2> scc_info_Input
        = {{ATOMIC_VAR_INIT(
                ::google::protobuf::internal::SCCInfoBase::kUninitialized),
            2,
            InitDefaultsInput},
           {
               &protobuf_hamilton_2eproto::scc_info_OutPoint.base,
               &protobuf_hamilton_2eproto::scc_info_Output.base,
           }};

    static void InitDefaultsTxRequest() {
        GOOGLE_PROTOBUF_VERIFY_VERSION;

        {
            void* ptr = &::proto::hamilton::_TxRequest_default_instance_;
            new(ptr)::proto::hamilton::TxRequest();
            ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
        }
        ::proto::hamilton::TxRequest::InitAsDefaultInstance();
    }

    ::google::protobuf::internal::SCCInfo<2> scc_info_TxRequest
        = {{ATOMIC_VAR_INIT(
                ::google::protobuf::internal::SCCInfoBase::kUninitialized),
            2,
            InitDefaultsTxRequest},
           {
               &protobuf_hamilton_2eproto::scc_info_Input.base,
               &protobuf_hamilton_2eproto::scc_info_Output.base,
           }};

    static void InitDefaultsTxResponse() {
        GOOGLE_PROTOBUF_VERIFY_VERSION;

        {
            void* ptr = &::proto::hamilton::_TxResponse_default_instance_;
            new(ptr)::proto::hamilton::TxResponse();
            ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
        }
        ::proto::hamilton::TxResponse::InitAsDefaultInstance();
    }

    ::google::protobuf::internal::SCCInfo<0> scc_info_TxResponse
        = {{ATOMIC_VAR_INIT(
                ::google::protobuf::internal::SCCInfoBase::kUninitialized),
            0,
            InitDefaultsTxResponse},
           {}};

    void InitDefaults() {
        ::google::protobuf::internal::InitSCC(&scc_info_OutPoint.base);
        ::google::protobuf::internal::InitSCC(&scc_info_Output.base);
        ::google::protobuf::internal::InitSCC(&scc_info_Input.base);
        ::google::protobuf::internal::InitSCC(&scc_info_TxRequest.base);
        ::google::protobuf::internal::InitSCC(&scc_info_TxResponse.base);
    }

    ::google::protobuf::Metadata file_level_metadata[5];

    const ::google::protobuf::uint32
        TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(
            protodesc_cold)
        = {
            ~0u, // no _has_bits_
            GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(
                ::proto::hamilton::OutPoint,
                _internal_metadata_),
            ~0u, // no _extensions_
            ~0u, // no _oneof_case_
            ~0u, // no _weak_field_map_
            GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(
                ::proto::hamilton::OutPoint,
                m_tx_id_),
            GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(
                ::proto::hamilton::OutPoint,
                m_index_),
            ~0u, // no _has_bits_
            GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(
                ::proto::hamilton::Output,
                _internal_metadata_),
            ~0u, // no _extensions_
            ~0u, // no _oneof_case_
            ~0u, // no _weak_field_map_
            GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(
                ::proto::hamilton::Output,
                m_witness_program_commitment_),
            GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(
                ::proto::hamilton::Output,
                m_value_),
            ~0u, // no _has_bits_
            GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(
                ::proto::hamilton::Input,
                _internal_metadata_),
            ~0u, // no _extensions_
            ~0u, // no _oneof_case_
            ~0u, // no _weak_field_map_
            GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(
                ::proto::hamilton::Input,
                m_prevout_),
            GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(
                ::proto::hamilton::Input,
                m_prevout_data_),
            ~0u, // no _has_bits_
            GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(
                ::proto::hamilton::TxRequest,
                _internal_metadata_),
            ~0u, // no _extensions_
            ~0u, // no _oneof_case_
            ~0u, // no _weak_field_map_
            GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(
                ::proto::hamilton::TxRequest,
                m_inputs_),
            GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(
                ::proto::hamilton::TxRequest,
                m_outputs_),
            GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(
                ::proto::hamilton::TxRequest,
                m_witness_),
            ~0u, // no _has_bits_
            GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(
                ::proto::hamilton::TxResponse,
                _internal_metadata_),
            ~0u, // no _extensions_
            ~0u, // no _oneof_case_
            ~0u, // no _weak_field_map_
    };
    static const ::google::protobuf::internal::MigrationSchema
        schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold)
        = {
            {0, -1, sizeof(::proto::hamilton::OutPoint)},
            {7, -1, sizeof(::proto::hamilton::Output)},
            {14, -1, sizeof(::proto::hamilton::Input)},
            {21, -1, sizeof(::proto::hamilton::TxRequest)},
            {29, -1, sizeof(::proto::hamilton::TxResponse)},
    };

    static ::google::protobuf::Message const* const file_default_instances[]
        = {
            reinterpret_cast<const ::google::protobuf::Message*>(
                &::proto::hamilton::_OutPoint_default_instance_),
            reinterpret_cast<const ::google::protobuf::Message*>(
                &::proto::hamilton::_Output_default_instance_),
            reinterpret_cast<const ::google::protobuf::Message*>(
                &::proto::hamilton::_Input_default_instance_),
            reinterpret_cast<const ::google::protobuf::Message*>(
                &::proto::hamilton::_TxRequest_default_instance_),
            reinterpret_cast<const ::google::protobuf::Message*>(
                &::proto::hamilton::_TxResponse_default_instance_),
    };

    void protobuf_AssignDescriptors() {
        AddDescriptors();
        AssignDescriptors("hamilton.proto",
                          schemas,
                          file_default_instances,
                          TableStruct::offsets,
                          file_level_metadata,
                          NULL,
                          NULL);
    }

    void protobuf_AssignDescriptorsOnce() {
        static ::google::protobuf::internal::once_flag once;
        ::google::protobuf::internal::call_once(once,
                                                protobuf_AssignDescriptors);
    }

    void protobuf_RegisterTypes(const ::std::string&)
        GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
    void protobuf_RegisterTypes(const ::std::string&) {
        protobuf_AssignDescriptorsOnce();
        ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 5);
    }

    void AddDescriptorsImpl() {
        InitDefaults();
        static const char
            descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(
                protodesc_cold)
            = {"\n\016hamilton.proto\022\016proto.hamilton\","
               "\n\010OutP"
               "oint\022\017\n\007m_tx_id\030\001 "
               "\001(\t\022\017\n\007m_index\030\002 \001(\004\"\?"
               "\n\006Output\022$\n\034m_witness_program_commitment"
               "\030\001 \001(\t\022\017\n\007m_value\030\002 "
               "\001(\004\"d\n\005Input\022+\n\tm_pr"
               "evout\030\001 "
               "\001(\0132\030.proto.hamilton.OutPoint\022.\n"
               "\016m_prevout_data\030\002 "
               "\001(\0132\026.proto.hamilton.O"
               "utput\"r\n\tTxRequest\022\'\n\010m_inputs\030\001 "
               "\003(\0132\025.p"
               "roto.hamilton.Input\022)\n\tm_outputs\030\002 "
               "\003(\0132\026"
               ".proto.hamilton.Output\022\021\n\tm_witness\030\003 "
               "\003("
               "\014\"\014\n\nTxResponse2R\n\010Hamilton\022F\n\013tra"
               "nsacti"
               "on\022\031.proto.hamilton.TxRequest\032\032.proto.ha"
               "milton.TxResponse\"\000b\006proto3"};
        ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
            descriptor,
            467);
        ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
            "hamilton.proto",
            &protobuf_RegisterTypes);
    }

    void AddDescriptors() {
        static ::google::protobuf::internal::once_flag once;
        ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
    }
    // Force AddDescriptors() to be called at dynamic initialization
    // time.
    struct StaticDescriptorInitializer {
        StaticDescriptorInitializer() {
            AddDescriptors();
        }
    } static_descriptor_initializer;
} // namespace protobuf_hamilton_2eproto
namespace proto {
    namespace hamilton {

        // ===================================================================

        void OutPoint::InitAsDefaultInstance() {}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
        const int OutPoint::kMTxIdFieldNumber;
        const int OutPoint::kMIndexFieldNumber;
#endif // !defined(_MSC_VER) || _MSC_VER >= 1900

        OutPoint::OutPoint()
            : ::google::protobuf::Message(),
              _internal_metadata_(NULL) {
            ::google::protobuf::internal::InitSCC(
                &protobuf_hamilton_2eproto::scc_info_OutPoint.base);
            SharedCtor();
            // @@protoc_insertion_point(constructor:proto.hamilton.OutPoint)
        }
        OutPoint::OutPoint(const OutPoint& from)
            : ::google::protobuf::Message(),
              _internal_metadata_(NULL) {
            _internal_metadata_.MergeFrom(from._internal_metadata_);
            m_tx_id_.UnsafeSetDefault(
                &::google::protobuf::internal::GetEmptyStringAlreadyInited());
            if(from.m_tx_id().size() > 0) {
                m_tx_id_.AssignWithDefault(&::google::protobuf::internal::
                                               GetEmptyStringAlreadyInited(),
                                           from.m_tx_id_);
            }
            m_index_ = from.m_index_;
            // @@protoc_insertion_point(copy_constructor:proto.hamilton.OutPoint)
        }

        void OutPoint::SharedCtor() {
            m_tx_id_.UnsafeSetDefault(
                &::google::protobuf::internal::GetEmptyStringAlreadyInited());
            m_index_ = GOOGLE_ULONGLONG(0);
        }

        OutPoint::~OutPoint() {
            // @@protoc_insertion_point(destructor:proto.hamilton.OutPoint)
            SharedDtor();
        }

        void OutPoint::SharedDtor() {
            m_tx_id_.DestroyNoArena(
                &::google::protobuf::internal::GetEmptyStringAlreadyInited());
        }

        void OutPoint::SetCachedSize(int size) const {
            _cached_size_.Set(size);
        }
        const ::google::protobuf::Descriptor* OutPoint::descriptor() {
            ::protobuf_hamilton_2eproto::protobuf_AssignDescriptorsOnce();
            return ::protobuf_hamilton_2eproto::file_level_metadata
                [kIndexInFileMessages]
                    .descriptor;
        }

        const OutPoint& OutPoint::default_instance() {
            ::google::protobuf::internal::InitSCC(
                &protobuf_hamilton_2eproto::scc_info_OutPoint.base);
            return *internal_default_instance();
        }

        void OutPoint::Clear() {
            // @@protoc_insertion_point(message_clear_start:proto.hamilton.OutPoint)
            ::google::protobuf::uint32 cached_has_bits = 0;
            // Prevent compiler warnings about cached_has_bits being
            // unused
            (void)cached_has_bits;

            m_tx_id_.ClearToEmptyNoArena(
                &::google::protobuf::internal::GetEmptyStringAlreadyInited());
            m_index_ = GOOGLE_ULONGLONG(0);
            _internal_metadata_.Clear();
        }

        bool OutPoint::MergePartialFromCodedStream(
            ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION)                  \
    if(!GOOGLE_PREDICT_TRUE(EXPRESSION)) \
    goto failure
            ::google::protobuf::uint32 tag;
            // @@protoc_insertion_point(parse_start:proto.hamilton.OutPoint)
            for(;;) {
                ::std::pair<::google::protobuf::uint32, bool> p
                    = input->ReadTagWithCutoffNoLastTag(127u);
                tag = p.first;
                if(!p.second)
                    goto handle_unusual;
                switch(::google::protobuf::internal::WireFormatLite::
                           GetTagFieldNumber(tag)) {
                    // string m_tx_id = 1;
                    case 1: {
                        if(static_cast<::google::protobuf::uint8>(tag)
                           == static_cast<::google::protobuf::uint8>(
                               10u /* 10 & 0xFF */)) {
                            DO_(::google::protobuf::internal::WireFormatLite::
                                    ReadString(input,
                                               this->mutable_m_tx_id()));
                            DO_(::google::protobuf::internal::WireFormatLite::
                                    VerifyUtf8String(
                                        this->m_tx_id().data(),
                                        static_cast<int>(
                                            this->m_tx_id().length()),
                                        ::google::protobuf::internal::
                                            WireFormatLite::PARSE,
                                        "proto.hamilton.OutPoint.m_tx_"
                                        "id"));
                        } else {
                            goto handle_unusual;
                        }
                        break;
                    }

                    // uint64 m_index = 2;
                    case 2: {
                        if(static_cast<::google::protobuf::uint8>(tag)
                           == static_cast<::google::protobuf::uint8>(
                               16u /* 16 & 0xFF */)) {
                            DO_((::google::protobuf::internal::WireFormatLite::
                                     ReadPrimitive<
                                         ::google::protobuf::uint64,
                                         ::google::protobuf::internal::
                                             WireFormatLite::TYPE_UINT64>(
                                         input,
                                         &m_index_)));
                        } else {
                            goto handle_unusual;
                        }
                        break;
                    }

                    default: {
                    handle_unusual:
                        if(tag == 0) {
                            goto success;
                        }
                        DO_(::google::protobuf::internal::WireFormat::
                                SkipField(input,
                                          tag,
                                          _internal_metadata_
                                              .mutable_unknown_fields()));
                        break;
                    }
                }
            }
        success:
            // @@protoc_insertion_point(parse_success:proto.hamilton.OutPoint)
            return true;
        failure:
            // @@protoc_insertion_point(parse_failure:proto.hamilton.OutPoint)
            return false;
#undef DO_
        }

        void OutPoint::SerializeWithCachedSizes(
            ::google::protobuf::io::CodedOutputStream* output) const {
            // @@protoc_insertion_point(serialize_start:proto.hamilton.OutPoint)
            ::google::protobuf::uint32 cached_has_bits = 0;
            (void)cached_has_bits;

            // string m_tx_id = 1;
            if(this->m_tx_id().size() > 0) {
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    this->m_tx_id().data(),
                    static_cast<int>(this->m_tx_id().length()),
                    ::google::protobuf::internal::WireFormatLite::SERIALIZE,
                    "proto.hamilton.OutPoint.m_tx_id");
                ::google::protobuf::internal::WireFormatLite::
                    WriteStringMaybeAliased(1, this->m_tx_id(), output);
            }

            // uint64 m_index = 2;
            if(this->m_index() != 0) {
                ::google::protobuf::internal::WireFormatLite::WriteUInt64(
                    2,
                    this->m_index(),
                    output);
            }

            if((_internal_metadata_.have_unknown_fields()
                && ::google::protobuf::internal::
                    GetProto3PreserveUnknownsDefault())) {
                ::google::protobuf::internal::WireFormat::
                    SerializeUnknownFields(
                        (::google::protobuf::internal::
                                 GetProto3PreserveUnknownsDefault()
                             ? _internal_metadata_.unknown_fields()
                             : _internal_metadata_.default_instance()),
                        output);
            }
            // @@protoc_insertion_point(serialize_end:proto.hamilton.OutPoint)
        }

        ::google::protobuf::uint8*
        OutPoint::InternalSerializeWithCachedSizesToArray(
            bool deterministic,
            ::google::protobuf::uint8* target) const {
            (void)deterministic; // Unused
            // @@protoc_insertion_point(serialize_to_array_start:proto.hamilton.OutPoint)
            ::google::protobuf::uint32 cached_has_bits = 0;
            (void)cached_has_bits;

            // string m_tx_id = 1;
            if(this->m_tx_id().size() > 0) {
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    this->m_tx_id().data(),
                    static_cast<int>(this->m_tx_id().length()),
                    ::google::protobuf::internal::WireFormatLite::SERIALIZE,
                    "proto.hamilton.OutPoint.m_tx_id");
                target = ::google::protobuf::internal::WireFormatLite::
                    WriteStringToArray(1, this->m_tx_id(), target);
            }

            // uint64 m_index = 2;
            if(this->m_index() != 0) {
                target = ::google::protobuf::internal::WireFormatLite::
                    WriteUInt64ToArray(2, this->m_index(), target);
            }

            if((_internal_metadata_.have_unknown_fields()
                && ::google::protobuf::internal::
                    GetProto3PreserveUnknownsDefault())) {
                target = ::google::protobuf::internal::WireFormat::
                    SerializeUnknownFieldsToArray(
                        (::google::protobuf::internal::
                                 GetProto3PreserveUnknownsDefault()
                             ? _internal_metadata_.unknown_fields()
                             : _internal_metadata_.default_instance()),
                        target);
            }
            // @@protoc_insertion_point(serialize_to_array_end:proto.hamilton.OutPoint)
            return target;
        }

        size_t OutPoint::ByteSizeLong() const {
            // @@protoc_insertion_point(message_byte_size_start:proto.hamilton.OutPoint)
            size_t total_size = 0;

            if((_internal_metadata_.have_unknown_fields()
                && ::google::protobuf::internal::
                    GetProto3PreserveUnknownsDefault())) {
                total_size += ::google::protobuf::internal::WireFormat::
                    ComputeUnknownFieldsSize(
                        (::google::protobuf::internal::
                                 GetProto3PreserveUnknownsDefault()
                             ? _internal_metadata_.unknown_fields()
                             : _internal_metadata_.default_instance()));
            }
            // string m_tx_id = 1;
            if(this->m_tx_id().size() > 0) {
                total_size += 1
                            + ::google::protobuf::internal::WireFormatLite::
                                  StringSize(this->m_tx_id());
            }

            // uint64 m_index = 2;
            if(this->m_index() != 0) {
                total_size += 1
                            + ::google::protobuf::internal::WireFormatLite::
                                  UInt64Size(this->m_index());
            }

            int cached_size
                = ::google::protobuf::internal::ToCachedSize(total_size);
            SetCachedSize(cached_size);
            return total_size;
        }

        void OutPoint::MergeFrom(const ::google::protobuf::Message& from) {
            // @@protoc_insertion_point(generalized_merge_from_start:proto.hamilton.OutPoint)
            GOOGLE_DCHECK_NE(&from, this);
            const OutPoint* source
                = ::google::protobuf::internal::DynamicCastToGenerated<
                    const OutPoint>(&from);
            if(source == NULL) {
                // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.hamilton.OutPoint)
                ::google::protobuf::internal::ReflectionOps::Merge(from, this);
            } else {
                // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.hamilton.OutPoint)
                MergeFrom(*source);
            }
        }

        void OutPoint::MergeFrom(const OutPoint& from) {
            // @@protoc_insertion_point(class_specific_merge_from_start:proto.hamilton.OutPoint)
            GOOGLE_DCHECK_NE(&from, this);
            _internal_metadata_.MergeFrom(from._internal_metadata_);
            ::google::protobuf::uint32 cached_has_bits = 0;
            (void)cached_has_bits;

            if(from.m_tx_id().size() > 0) {
                m_tx_id_.AssignWithDefault(&::google::protobuf::internal::
                                               GetEmptyStringAlreadyInited(),
                                           from.m_tx_id_);
            }
            if(from.m_index() != 0) {
                set_m_index(from.m_index());
            }
        }

        void OutPoint::CopyFrom(const ::google::protobuf::Message& from) {
            // @@protoc_insertion_point(generalized_copy_from_start:proto.hamilton.OutPoint)
            if(&from == this)
                return;
            Clear();
            MergeFrom(from);
        }

        void OutPoint::CopyFrom(const OutPoint& from) {
            // @@protoc_insertion_point(class_specific_copy_from_start:proto.hamilton.OutPoint)
            if(&from == this)
                return;
            Clear();
            MergeFrom(from);
        }

        bool OutPoint::IsInitialized() const {
            return true;
        }

        void OutPoint::Swap(OutPoint* other) {
            if(other == this)
                return;
            InternalSwap(other);
        }
        void OutPoint::InternalSwap(OutPoint* other) {
            using std::swap;
            m_tx_id_.Swap(
                &other->m_tx_id_,
                &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
                GetArenaNoVirtual());
            swap(m_index_, other->m_index_);
            _internal_metadata_.Swap(&other->_internal_metadata_);
        }

        ::google::protobuf::Metadata OutPoint::GetMetadata() const {
            protobuf_hamilton_2eproto::protobuf_AssignDescriptorsOnce();
            return ::protobuf_hamilton_2eproto::file_level_metadata
                [kIndexInFileMessages];
        }

        // ===================================================================

        void Output::InitAsDefaultInstance() {}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
        const int Output::kMWitnessProgramCommitmentFieldNumber;
        const int Output::kMValueFieldNumber;
#endif // !defined(_MSC_VER) || _MSC_VER >= 1900

        Output::Output()
            : ::google::protobuf::Message(),
              _internal_metadata_(NULL) {
            ::google::protobuf::internal::InitSCC(
                &protobuf_hamilton_2eproto::scc_info_Output.base);
            SharedCtor();
            // @@protoc_insertion_point(constructor:proto.hamilton.Output)
        }
        Output::Output(const Output& from)
            : ::google::protobuf::Message(),
              _internal_metadata_(NULL) {
            _internal_metadata_.MergeFrom(from._internal_metadata_);
            m_witness_program_commitment_.UnsafeSetDefault(
                &::google::protobuf::internal::GetEmptyStringAlreadyInited());
            if(from.m_witness_program_commitment().size() > 0) {
                m_witness_program_commitment_.AssignWithDefault(
                    &::google::protobuf::internal::
                        GetEmptyStringAlreadyInited(),
                    from.m_witness_program_commitment_);
            }
            m_value_ = from.m_value_;
            // @@protoc_insertion_point(copy_constructor:proto.hamilton.Output)
        }

        void Output::SharedCtor() {
            m_witness_program_commitment_.UnsafeSetDefault(
                &::google::protobuf::internal::GetEmptyStringAlreadyInited());
            m_value_ = GOOGLE_ULONGLONG(0);
        }

        Output::~Output() {
            // @@protoc_insertion_point(destructor:proto.hamilton.Output)
            SharedDtor();
        }

        void Output::SharedDtor() {
            m_witness_program_commitment_.DestroyNoArena(
                &::google::protobuf::internal::GetEmptyStringAlreadyInited());
        }

        void Output::SetCachedSize(int size) const {
            _cached_size_.Set(size);
        }
        const ::google::protobuf::Descriptor* Output::descriptor() {
            ::protobuf_hamilton_2eproto::protobuf_AssignDescriptorsOnce();
            return ::protobuf_hamilton_2eproto::file_level_metadata
                [kIndexInFileMessages]
                    .descriptor;
        }

        const Output& Output::default_instance() {
            ::google::protobuf::internal::InitSCC(
                &protobuf_hamilton_2eproto::scc_info_Output.base);
            return *internal_default_instance();
        }

        void Output::Clear() {
            // @@protoc_insertion_point(message_clear_start:proto.hamilton.Output)
            ::google::protobuf::uint32 cached_has_bits = 0;
            // Prevent compiler warnings about cached_has_bits being
            // unused
            (void)cached_has_bits;

            m_witness_program_commitment_.ClearToEmptyNoArena(
                &::google::protobuf::internal::GetEmptyStringAlreadyInited());
            m_value_ = GOOGLE_ULONGLONG(0);
            _internal_metadata_.Clear();
        }

        bool Output::MergePartialFromCodedStream(
            ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION)                  \
    if(!GOOGLE_PREDICT_TRUE(EXPRESSION)) \
    goto failure
            ::google::protobuf::uint32 tag;
            // @@protoc_insertion_point(parse_start:proto.hamilton.Output)
            for(;;) {
                ::std::pair<::google::protobuf::uint32, bool> p
                    = input->ReadTagWithCutoffNoLastTag(127u);
                tag = p.first;
                if(!p.second)
                    goto handle_unusual;
                switch(::google::protobuf::internal::WireFormatLite::
                           GetTagFieldNumber(tag)) {
                    // string m_witness_program_commitment = 1;
                    case 1: {
                        if(static_cast<::google::protobuf::uint8>(tag)
                           == static_cast<::google::protobuf::uint8>(
                               10u /* 10 & 0xFF */)) {
                            DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                                input,
                                this->mutable_m_witness_program_commitment()));
                            DO_(::google::protobuf::internal::WireFormatLite::
                                    VerifyUtf8String(
                                        this->m_witness_program_commitment()
                                            .data(),
                                        static_cast<int>(
                                            this->m_witness_program_commitment()
                                                .length()),
                                        ::google::protobuf::internal::
                                            WireFormatLite::PARSE,
                                        "proto.hamilton.Output.m_"
                                        "witness_"
                                        "program_commitment"));
                        } else {
                            goto handle_unusual;
                        }
                        break;
                    }

                    // uint64 m_value = 2;
                    case 2: {
                        if(static_cast<::google::protobuf::uint8>(tag)
                           == static_cast<::google::protobuf::uint8>(
                               16u /* 16 & 0xFF */)) {
                            DO_((::google::protobuf::internal::WireFormatLite::
                                     ReadPrimitive<
                                         ::google::protobuf::uint64,
                                         ::google::protobuf::internal::
                                             WireFormatLite::TYPE_UINT64>(
                                         input,
                                         &m_value_)));
                        } else {
                            goto handle_unusual;
                        }
                        break;
                    }

                    default: {
                    handle_unusual:
                        if(tag == 0) {
                            goto success;
                        }
                        DO_(::google::protobuf::internal::WireFormat::
                                SkipField(input,
                                          tag,
                                          _internal_metadata_
                                              .mutable_unknown_fields()));
                        break;
                    }
                }
            }
        success:
            // @@protoc_insertion_point(parse_success:proto.hamilton.Output)
            return true;
        failure:
            // @@protoc_insertion_point(parse_failure:proto.hamilton.Output)
            return false;
#undef DO_
        }

        void Output::SerializeWithCachedSizes(
            ::google::protobuf::io::CodedOutputStream* output) const {
            // @@protoc_insertion_point(serialize_start:proto.hamilton.Output)
            ::google::protobuf::uint32 cached_has_bits = 0;
            (void)cached_has_bits;

            // string m_witness_program_commitment = 1;
            if(this->m_witness_program_commitment().size() > 0) {
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    this->m_witness_program_commitment().data(),
                    static_cast<int>(
                        this->m_witness_program_commitment().length()),
                    ::google::protobuf::internal::WireFormatLite::SERIALIZE,
                    "proto.hamilton.Output.m_witness_program_"
                    "commitment");
                ::google::protobuf::internal::WireFormatLite::
                    WriteStringMaybeAliased(
                        1,
                        this->m_witness_program_commitment(),
                        output);
            }

            // uint64 m_value = 2;
            if(this->m_value() != 0) {
                ::google::protobuf::internal::WireFormatLite::WriteUInt64(
                    2,
                    this->m_value(),
                    output);
            }

            if((_internal_metadata_.have_unknown_fields()
                && ::google::protobuf::internal::
                    GetProto3PreserveUnknownsDefault())) {
                ::google::protobuf::internal::WireFormat::
                    SerializeUnknownFields(
                        (::google::protobuf::internal::
                                 GetProto3PreserveUnknownsDefault()
                             ? _internal_metadata_.unknown_fields()
                             : _internal_metadata_.default_instance()),
                        output);
            }
            // @@protoc_insertion_point(serialize_end:proto.hamilton.Output)
        }

        ::google::protobuf::uint8*
        Output::InternalSerializeWithCachedSizesToArray(
            bool deterministic,
            ::google::protobuf::uint8* target) const {
            (void)deterministic; // Unused
            // @@protoc_insertion_point(serialize_to_array_start:proto.hamilton.Output)
            ::google::protobuf::uint32 cached_has_bits = 0;
            (void)cached_has_bits;

            // string m_witness_program_commitment = 1;
            if(this->m_witness_program_commitment().size() > 0) {
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    this->m_witness_program_commitment().data(),
                    static_cast<int>(
                        this->m_witness_program_commitment().length()),
                    ::google::protobuf::internal::WireFormatLite::SERIALIZE,
                    "proto.hamilton.Output.m_witness_program_"
                    "commitment");
                target = ::google::protobuf::internal::WireFormatLite::
                    WriteStringToArray(1,
                                       this->m_witness_program_commitment(),
                                       target);
            }

            // uint64 m_value = 2;
            if(this->m_value() != 0) {
                target = ::google::protobuf::internal::WireFormatLite::
                    WriteUInt64ToArray(2, this->m_value(), target);
            }

            if((_internal_metadata_.have_unknown_fields()
                && ::google::protobuf::internal::
                    GetProto3PreserveUnknownsDefault())) {
                target = ::google::protobuf::internal::WireFormat::
                    SerializeUnknownFieldsToArray(
                        (::google::protobuf::internal::
                                 GetProto3PreserveUnknownsDefault()
                             ? _internal_metadata_.unknown_fields()
                             : _internal_metadata_.default_instance()),
                        target);
            }
            // @@protoc_insertion_point(serialize_to_array_end:proto.hamilton.Output)
            return target;
        }

        size_t Output::ByteSizeLong() const {
            // @@protoc_insertion_point(message_byte_size_start:proto.hamilton.Output)
            size_t total_size = 0;

            if((_internal_metadata_.have_unknown_fields()
                && ::google::protobuf::internal::
                    GetProto3PreserveUnknownsDefault())) {
                total_size += ::google::protobuf::internal::WireFormat::
                    ComputeUnknownFieldsSize(
                        (::google::protobuf::internal::
                                 GetProto3PreserveUnknownsDefault()
                             ? _internal_metadata_.unknown_fields()
                             : _internal_metadata_.default_instance()));
            }
            // string m_witness_program_commitment = 1;
            if(this->m_witness_program_commitment().size() > 0) {
                total_size
                    += 1
                     + ::google::protobuf::internal::WireFormatLite::
                           StringSize(this->m_witness_program_commitment());
            }

            // uint64 m_value = 2;
            if(this->m_value() != 0) {
                total_size += 1
                            + ::google::protobuf::internal::WireFormatLite::
                                  UInt64Size(this->m_value());
            }

            int cached_size
                = ::google::protobuf::internal::ToCachedSize(total_size);
            SetCachedSize(cached_size);
            return total_size;
        }

        void Output::MergeFrom(const ::google::protobuf::Message& from) {
            // @@protoc_insertion_point(generalized_merge_from_start:proto.hamilton.Output)
            GOOGLE_DCHECK_NE(&from, this);
            const Output* source
                = ::google::protobuf::internal::DynamicCastToGenerated<
                    const Output>(&from);
            if(source == NULL) {
                // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.hamilton.Output)
                ::google::protobuf::internal::ReflectionOps::Merge(from, this);
            } else {
                // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.hamilton.Output)
                MergeFrom(*source);
            }
        }

        void Output::MergeFrom(const Output& from) {
            // @@protoc_insertion_point(class_specific_merge_from_start:proto.hamilton.Output)
            GOOGLE_DCHECK_NE(&from, this);
            _internal_metadata_.MergeFrom(from._internal_metadata_);
            ::google::protobuf::uint32 cached_has_bits = 0;
            (void)cached_has_bits;

            if(from.m_witness_program_commitment().size() > 0) {
                m_witness_program_commitment_.AssignWithDefault(
                    &::google::protobuf::internal::
                        GetEmptyStringAlreadyInited(),
                    from.m_witness_program_commitment_);
            }
            if(from.m_value() != 0) {
                set_m_value(from.m_value());
            }
        }

        void Output::CopyFrom(const ::google::protobuf::Message& from) {
            // @@protoc_insertion_point(generalized_copy_from_start:proto.hamilton.Output)
            if(&from == this)
                return;
            Clear();
            MergeFrom(from);
        }

        void Output::CopyFrom(const Output& from) {
            // @@protoc_insertion_point(class_specific_copy_from_start:proto.hamilton.Output)
            if(&from == this)
                return;
            Clear();
            MergeFrom(from);
        }

        bool Output::IsInitialized() const {
            return true;
        }

        void Output::Swap(Output* other) {
            if(other == this)
                return;
            InternalSwap(other);
        }
        void Output::InternalSwap(Output* other) {
            using std::swap;
            m_witness_program_commitment_.Swap(
                &other->m_witness_program_commitment_,
                &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
                GetArenaNoVirtual());
            swap(m_value_, other->m_value_);
            _internal_metadata_.Swap(&other->_internal_metadata_);
        }

        ::google::protobuf::Metadata Output::GetMetadata() const {
            protobuf_hamilton_2eproto::protobuf_AssignDescriptorsOnce();
            return ::protobuf_hamilton_2eproto::file_level_metadata
                [kIndexInFileMessages];
        }

        // ===================================================================

        void Input::InitAsDefaultInstance() {
            ::proto::hamilton::_Input_default_instance_._instance
                .get_mutable()
                ->m_prevout_
                = const_cast<::proto::hamilton::OutPoint*>(
                    ::proto::hamilton::OutPoint::internal_default_instance());
            ::proto::hamilton::_Input_default_instance_._instance
                .get_mutable()
                ->m_prevout_data_
                = const_cast<::proto::hamilton::Output*>(
                    ::proto::hamilton::Output::internal_default_instance());
        }
#if !defined(_MSC_VER) || _MSC_VER >= 1900
        const int Input::kMPrevoutFieldNumber;
        const int Input::kMPrevoutDataFieldNumber;
#endif // !defined(_MSC_VER) || _MSC_VER >= 1900

        Input::Input()
            : ::google::protobuf::Message(),
              _internal_metadata_(NULL) {
            ::google::protobuf::internal::InitSCC(
                &protobuf_hamilton_2eproto::scc_info_Input.base);
            SharedCtor();
            // @@protoc_insertion_point(constructor:proto.hamilton.Input)
        }
        Input::Input(const Input& from)
            : ::google::protobuf::Message(),
              _internal_metadata_(NULL) {
            _internal_metadata_.MergeFrom(from._internal_metadata_);
            if(from.has_m_prevout()) {
                m_prevout_ = new ::proto::hamilton::OutPoint(*from.m_prevout_);
            } else {
                m_prevout_ = NULL;
            }
            if(from.has_m_prevout_data()) {
                m_prevout_data_
                    = new ::proto::hamilton::Output(*from.m_prevout_data_);
            } else {
                m_prevout_data_ = NULL;
            }
            // @@protoc_insertion_point(copy_constructor:proto.hamilton.Input)
        }

        void Input::SharedCtor() {
            ::memset(
                &m_prevout_,
                0,
                static_cast<size_t>(reinterpret_cast<char*>(&m_prevout_data_)
                                    - reinterpret_cast<char*>(&m_prevout_))
                    + sizeof(m_prevout_data_));
        }

        Input::~Input() {
            // @@protoc_insertion_point(destructor:proto.hamilton.Input)
            SharedDtor();
        }

        void Input::SharedDtor() {
            if(this != internal_default_instance())
                delete m_prevout_;
            if(this != internal_default_instance())
                delete m_prevout_data_;
        }

        void Input::SetCachedSize(int size) const {
            _cached_size_.Set(size);
        }
        const ::google::protobuf::Descriptor* Input::descriptor() {
            ::protobuf_hamilton_2eproto::protobuf_AssignDescriptorsOnce();
            return ::protobuf_hamilton_2eproto::file_level_metadata
                [kIndexInFileMessages]
                    .descriptor;
        }

        const Input& Input::default_instance() {
            ::google::protobuf::internal::InitSCC(
                &protobuf_hamilton_2eproto::scc_info_Input.base);
            return *internal_default_instance();
        }

        void Input::Clear() {
            // @@protoc_insertion_point(message_clear_start:proto.hamilton.Input)
            ::google::protobuf::uint32 cached_has_bits = 0;
            // Prevent compiler warnings about cached_has_bits being
            // unused
            (void)cached_has_bits;

            if(GetArenaNoVirtual() == NULL && m_prevout_ != NULL) {
                delete m_prevout_;
            }
            m_prevout_ = NULL;
            if(GetArenaNoVirtual() == NULL && m_prevout_data_ != NULL) {
                delete m_prevout_data_;
            }
            m_prevout_data_ = NULL;
            _internal_metadata_.Clear();
        }

        bool Input::MergePartialFromCodedStream(
            ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION)                  \
    if(!GOOGLE_PREDICT_TRUE(EXPRESSION)) \
    goto failure
            ::google::protobuf::uint32 tag;
            // @@protoc_insertion_point(parse_start:proto.hamilton.Input)
            for(;;) {
                ::std::pair<::google::protobuf::uint32, bool> p
                    = input->ReadTagWithCutoffNoLastTag(127u);
                tag = p.first;
                if(!p.second)
                    goto handle_unusual;
                switch(::google::protobuf::internal::WireFormatLite::
                           GetTagFieldNumber(tag)) {
                    // .proto.hamilton.OutPoint m_prevout = 1;
                    case 1: {
                        if(static_cast<::google::protobuf::uint8>(tag)
                           == static_cast<::google::protobuf::uint8>(
                               10u /* 10 & 0xFF */)) {
                            DO_(::google::protobuf::internal::WireFormatLite::
                                    ReadMessage(input, mutable_m_prevout()));
                        } else {
                            goto handle_unusual;
                        }
                        break;
                    }

                    // .proto.hamilton.Output m_prevout_data = 2;
                    case 2: {
                        if(static_cast<::google::protobuf::uint8>(tag)
                           == static_cast<::google::protobuf::uint8>(
                               18u /* 18 & 0xFF */)) {
                            DO_(::google::protobuf::internal::WireFormatLite::
                                    ReadMessage(input,
                                                mutable_m_prevout_data()));
                        } else {
                            goto handle_unusual;
                        }
                        break;
                    }

                    default: {
                    handle_unusual:
                        if(tag == 0) {
                            goto success;
                        }
                        DO_(::google::protobuf::internal::WireFormat::
                                SkipField(input,
                                          tag,
                                          _internal_metadata_
                                              .mutable_unknown_fields()));
                        break;
                    }
                }
            }
        success:
            // @@protoc_insertion_point(parse_success:proto.hamilton.Input)
            return true;
        failure:
            // @@protoc_insertion_point(parse_failure:proto.hamilton.Input)
            return false;
#undef DO_
        }

        void Input::SerializeWithCachedSizes(
            ::google::protobuf::io::CodedOutputStream* output) const {
            // @@protoc_insertion_point(serialize_start:proto.hamilton.Input)
            ::google::protobuf::uint32 cached_has_bits = 0;
            (void)cached_has_bits;

            // .proto.hamilton.OutPoint m_prevout = 1;
            if(this->has_m_prevout()) {
                ::google::protobuf::internal::WireFormatLite::
                    WriteMessageMaybeToArray(1,
                                             this->_internal_m_prevout(),
                                             output);
            }

            // .proto.hamilton.Output m_prevout_data = 2;
            if(this->has_m_prevout_data()) {
                ::google::protobuf::internal::WireFormatLite::
                    WriteMessageMaybeToArray(2,
                                             this->_internal_m_prevout_data(),
                                             output);
            }

            if((_internal_metadata_.have_unknown_fields()
                && ::google::protobuf::internal::
                    GetProto3PreserveUnknownsDefault())) {
                ::google::protobuf::internal::WireFormat::
                    SerializeUnknownFields(
                        (::google::protobuf::internal::
                                 GetProto3PreserveUnknownsDefault()
                             ? _internal_metadata_.unknown_fields()
                             : _internal_metadata_.default_instance()),
                        output);
            }
            // @@protoc_insertion_point(serialize_end:proto.hamilton.Input)
        }

        ::google::protobuf::uint8*
        Input::InternalSerializeWithCachedSizesToArray(
            bool deterministic,
            ::google::protobuf::uint8* target) const {
            (void)deterministic; // Unused
            // @@protoc_insertion_point(serialize_to_array_start:proto.hamilton.Input)
            ::google::protobuf::uint32 cached_has_bits = 0;
            (void)cached_has_bits;

            // .proto.hamilton.OutPoint m_prevout = 1;
            if(this->has_m_prevout()) {
                target = ::google::protobuf::internal::WireFormatLite::
                    InternalWriteMessageToArray(1,
                                                this->_internal_m_prevout(),
                                                deterministic,
                                                target);
            }

            // .proto.hamilton.Output m_prevout_data = 2;
            if(this->has_m_prevout_data()) {
                target = ::google::protobuf::internal::WireFormatLite::
                    InternalWriteMessageToArray(
                        2,
                        this->_internal_m_prevout_data(),
                        deterministic,
                        target);
            }

            if((_internal_metadata_.have_unknown_fields()
                && ::google::protobuf::internal::
                    GetProto3PreserveUnknownsDefault())) {
                target = ::google::protobuf::internal::WireFormat::
                    SerializeUnknownFieldsToArray(
                        (::google::protobuf::internal::
                                 GetProto3PreserveUnknownsDefault()
                             ? _internal_metadata_.unknown_fields()
                             : _internal_metadata_.default_instance()),
                        target);
            }
            // @@protoc_insertion_point(serialize_to_array_end:proto.hamilton.Input)
            return target;
        }

        size_t Input::ByteSizeLong() const {
            // @@protoc_insertion_point(message_byte_size_start:proto.hamilton.Input)
            size_t total_size = 0;

            if((_internal_metadata_.have_unknown_fields()
                && ::google::protobuf::internal::
                    GetProto3PreserveUnknownsDefault())) {
                total_size += ::google::protobuf::internal::WireFormat::
                    ComputeUnknownFieldsSize(
                        (::google::protobuf::internal::
                                 GetProto3PreserveUnknownsDefault()
                             ? _internal_metadata_.unknown_fields()
                             : _internal_metadata_.default_instance()));
            }
            // .proto.hamilton.OutPoint m_prevout = 1;
            if(this->has_m_prevout()) {
                total_size += 1
                            + ::google::protobuf::internal::WireFormatLite::
                                  MessageSize(*m_prevout_);
            }

            // .proto.hamilton.Output m_prevout_data = 2;
            if(this->has_m_prevout_data()) {
                total_size += 1
                            + ::google::protobuf::internal::WireFormatLite::
                                  MessageSize(*m_prevout_data_);
            }

            int cached_size
                = ::google::protobuf::internal::ToCachedSize(total_size);
            SetCachedSize(cached_size);
            return total_size;
        }

        void Input::MergeFrom(const ::google::protobuf::Message& from) {
            // @@protoc_insertion_point(generalized_merge_from_start:proto.hamilton.Input)
            GOOGLE_DCHECK_NE(&from, this);
            const Input* source
                = ::google::protobuf::internal::DynamicCastToGenerated<
                    const Input>(&from);
            if(source == NULL) {
                // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.hamilton.Input)
                ::google::protobuf::internal::ReflectionOps::Merge(from, this);
            } else {
                // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.hamilton.Input)
                MergeFrom(*source);
            }
        }

        void Input::MergeFrom(const Input& from) {
            // @@protoc_insertion_point(class_specific_merge_from_start:proto.hamilton.Input)
            GOOGLE_DCHECK_NE(&from, this);
            _internal_metadata_.MergeFrom(from._internal_metadata_);
            ::google::protobuf::uint32 cached_has_bits = 0;
            (void)cached_has_bits;

            if(from.has_m_prevout()) {
                mutable_m_prevout()->::proto::hamilton::OutPoint::MergeFrom(
                    from.m_prevout());
            }
            if(from.has_m_prevout_data()) {
                mutable_m_prevout_data()->::proto::hamilton::Output::MergeFrom(
                    from.m_prevout_data());
            }
        }

        void Input::CopyFrom(const ::google::protobuf::Message& from) {
            // @@protoc_insertion_point(generalized_copy_from_start:proto.hamilton.Input)
            if(&from == this)
                return;
            Clear();
            MergeFrom(from);
        }

        void Input::CopyFrom(const Input& from) {
            // @@protoc_insertion_point(class_specific_copy_from_start:proto.hamilton.Input)
            if(&from == this)
                return;
            Clear();
            MergeFrom(from);
        }

        bool Input::IsInitialized() const {
            return true;
        }

        void Input::Swap(Input* other) {
            if(other == this)
                return;
            InternalSwap(other);
        }
        void Input::InternalSwap(Input* other) {
            using std::swap;
            swap(m_prevout_, other->m_prevout_);
            swap(m_prevout_data_, other->m_prevout_data_);
            _internal_metadata_.Swap(&other->_internal_metadata_);
        }

        ::google::protobuf::Metadata Input::GetMetadata() const {
            protobuf_hamilton_2eproto::protobuf_AssignDescriptorsOnce();
            return ::protobuf_hamilton_2eproto::file_level_metadata
                [kIndexInFileMessages];
        }

        // ===================================================================

        void TxRequest::InitAsDefaultInstance() {}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
        const int TxRequest::kMInputsFieldNumber;
        const int TxRequest::kMOutputsFieldNumber;
        const int TxRequest::kMWitnessFieldNumber;
#endif // !defined(_MSC_VER) || _MSC_VER >= 1900

        TxRequest::TxRequest()
            : ::google::protobuf::Message(),
              _internal_metadata_(NULL) {
            ::google::protobuf::internal::InitSCC(
                &protobuf_hamilton_2eproto::scc_info_TxRequest.base);
            SharedCtor();
            // @@protoc_insertion_point(constructor:proto.hamilton.TxRequest)
        }
        TxRequest::TxRequest(const TxRequest& from)
            : ::google::protobuf::Message(),
              _internal_metadata_(NULL),
              m_inputs_(from.m_inputs_),
              m_outputs_(from.m_outputs_),
              m_witness_(from.m_witness_) {
            _internal_metadata_.MergeFrom(from._internal_metadata_);
            // @@protoc_insertion_point(copy_constructor:proto.hamilton.TxRequest)
        }

        cbdc::transaction::full_tx TxRequest::to_full_tx() {
            std::vector<cbdc::transaction::input> new_inputs;
            std::vector<cbdc::transaction::output> new_outputs;
            std::vector<std::vector<std::byte>> new_witnesses;

            // Inputs
            for(int i = 0; i < this->m_inputs().size(); i++) {
                auto input = this->m_inputs()[i];
                cbdc::transaction::output new_output;
                cbdc::transaction::out_point new_outpoint;
                cbdc::transaction::input new_input;
                std::string witness = input.m_prevout_data()
                                          .m_witness_program_commitment()
                                          .c_str();
                std::string tx_id = input.m_prevout().m_tx_id().c_str();

                new_output.m_witness_program_commitment
                    = std::array<unsigned char, 32>();
                new_outpoint.m_tx_id = std::array<unsigned char, 32>();
                for(unsigned long j = 0; j < witness.length(); j++) {
                    new_output.m_witness_program_commitment[j] = witness[j];
                }
                for(unsigned long j = 0; j < tx_id.length(); j++) {
                    new_outpoint.m_tx_id[j] = tx_id[j];
                }
                new_output.m_value = input.m_prevout_data().m_value();
                new_outpoint.m_index = input.m_prevout().m_index();
                new_input.m_prevout = new_outpoint;
                new_input.m_prevout_data = new_output;
                new_inputs.push_back(new_input);
            }
            // Outputs
            for(int i = 0; i < this->m_outputs().size(); i++) {
                auto output = this->m_outputs()[i];
                cbdc::transaction::output new_output;
                std::string witness
                    = output.m_witness_program_commitment().c_str();

                new_output.m_witness_program_commitment
                    = std::array<unsigned char, 32>();
                for(unsigned long j = 0; j < witness.length(); j++) {
                    new_output.m_witness_program_commitment[j] = witness[j];
                }

                new_output.m_value = output.m_value();
                new_outputs.push_back(new_output);
            }
            // Witnesses
            for(int i = 0; i < this->m_witness().size(); i++) {
                auto witness = this->m_witness()[i];
                std::vector<std::byte> new_witness;

                for(unsigned long j = 0; j < witness.length(); j++) {
                    new_witness.push_back((std::byte)(witness[j]));
                }
                new_witnesses.push_back(new_witness);
            }
            cbdc::transaction::full_tx ret{
                new_inputs,
                new_outputs,
                new_witnesses,
            };

            return ret;
        }

        void TxRequest::SharedCtor() {}

        TxRequest::~TxRequest() {
            // @@protoc_insertion_point(destructor:proto.hamilton.TxRequest)
            SharedDtor();
        }

        void TxRequest::SharedDtor() {}

        void TxRequest::SetCachedSize(int size) const {
            _cached_size_.Set(size);
        }
        const ::google::protobuf::Descriptor* TxRequest::descriptor() {
            ::protobuf_hamilton_2eproto::protobuf_AssignDescriptorsOnce();
            return ::protobuf_hamilton_2eproto::file_level_metadata
                [kIndexInFileMessages]
                    .descriptor;
        }

        const TxRequest& TxRequest::default_instance() {
            ::google::protobuf::internal::InitSCC(
                &protobuf_hamilton_2eproto::scc_info_TxRequest.base);
            return *internal_default_instance();
        }

        void TxRequest::Clear() {
            // @@protoc_insertion_point(message_clear_start:proto.hamilton.TxRequest)
            ::google::protobuf::uint32 cached_has_bits = 0;
            // Prevent compiler warnings about cached_has_bits being
            // unused
            (void)cached_has_bits;

            m_inputs_.Clear();
            m_outputs_.Clear();
            m_witness_.Clear();
            _internal_metadata_.Clear();
        }

        bool TxRequest::MergePartialFromCodedStream(
            ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION)                  \
    if(!GOOGLE_PREDICT_TRUE(EXPRESSION)) \
    goto failure
            ::google::protobuf::uint32 tag;
            // @@protoc_insertion_point(parse_start:proto.hamilton.TxRequest)
            for(;;) {
                ::std::pair<::google::protobuf::uint32, bool> p
                    = input->ReadTagWithCutoffNoLastTag(127u);
                tag = p.first;
                if(!p.second)
                    goto handle_unusual;
                switch(::google::protobuf::internal::WireFormatLite::
                           GetTagFieldNumber(tag)) {
                    // repeated .proto.hamilton.Input m_inputs = 1;
                    case 1: {
                        if(static_cast<::google::protobuf::uint8>(tag)
                           == static_cast<::google::protobuf::uint8>(
                               10u /* 10 & 0xFF */)) {
                            DO_(::google::protobuf::internal::WireFormatLite::
                                    ReadMessage(input, add_m_inputs()));
                        } else {
                            goto handle_unusual;
                        }
                        break;
                    }

                    // repeated .proto.hamilton.Output m_outputs = 2;
                    case 2: {
                        if(static_cast<::google::protobuf::uint8>(tag)
                           == static_cast<::google::protobuf::uint8>(
                               18u /* 18 & 0xFF */)) {
                            DO_(::google::protobuf::internal::WireFormatLite::
                                    ReadMessage(input, add_m_outputs()));
                        } else {
                            goto handle_unusual;
                        }
                        break;
                    }

                    // repeated bytes m_witness = 3;
                    case 3: {
                        if(static_cast<::google::protobuf::uint8>(tag)
                           == static_cast<::google::protobuf::uint8>(
                               26u /* 26 & 0xFF */)) {
                            DO_(::google::protobuf::internal::WireFormatLite::
                                    ReadBytes(input, this->add_m_witness()));
                        } else {
                            goto handle_unusual;
                        }
                        break;
                    }

                    default: {
                    handle_unusual:
                        if(tag == 0) {
                            goto success;
                        }
                        DO_(::google::protobuf::internal::WireFormat::
                                SkipField(input,
                                          tag,
                                          _internal_metadata_
                                              .mutable_unknown_fields()));
                        break;
                    }
                }
            }
        success:
            // @@protoc_insertion_point(parse_success:proto.hamilton.TxRequest)
            return true;
        failure:
            // @@protoc_insertion_point(parse_failure:proto.hamilton.TxRequest)
            return false;
#undef DO_
        }

        void TxRequest::SerializeWithCachedSizes(
            ::google::protobuf::io::CodedOutputStream* output) const {
            // @@protoc_insertion_point(serialize_start:proto.hamilton.TxRequest)
            ::google::protobuf::uint32 cached_has_bits = 0;
            (void)cached_has_bits;

            // repeated .proto.hamilton.Input m_inputs = 1;
            for(unsigned int i
                = 0,
                n = static_cast<unsigned int>(this->m_inputs_size());
                i < n;
                i++) {
                ::google::protobuf::internal::WireFormatLite::
                    WriteMessageMaybeToArray(
                        1,
                        this->m_inputs(static_cast<int>(i)),
                        output);
            }

            // repeated .proto.hamilton.Output m_outputs = 2;
            for(unsigned int i
                = 0,
                n = static_cast<unsigned int>(this->m_outputs_size());
                i < n;
                i++) {
                ::google::protobuf::internal::WireFormatLite::
                    WriteMessageMaybeToArray(
                        2,
                        this->m_outputs(static_cast<int>(i)),
                        output);
            }

            // repeated bytes m_witness = 3;
            for(int i = 0, n = this->m_witness_size(); i < n; i++) {
                ::google::protobuf::internal::WireFormatLite::WriteBytes(
                    3,
                    this->m_witness(i),
                    output);
            }

            if((_internal_metadata_.have_unknown_fields()
                && ::google::protobuf::internal::
                    GetProto3PreserveUnknownsDefault())) {
                ::google::protobuf::internal::WireFormat::
                    SerializeUnknownFields(
                        (::google::protobuf::internal::
                                 GetProto3PreserveUnknownsDefault()
                             ? _internal_metadata_.unknown_fields()
                             : _internal_metadata_.default_instance()),
                        output);
            }
            // @@protoc_insertion_point(serialize_end:proto.hamilton.TxRequest)
        }

        ::google::protobuf::uint8*
        TxRequest::InternalSerializeWithCachedSizesToArray(
            bool deterministic,
            ::google::protobuf::uint8* target) const {
            (void)deterministic; // Unused
            // @@protoc_insertion_point(serialize_to_array_start:proto.hamilton.TxRequest)
            ::google::protobuf::uint32 cached_has_bits = 0;
            (void)cached_has_bits;

            // repeated .proto.hamilton.Input m_inputs = 1;
            for(unsigned int i
                = 0,
                n = static_cast<unsigned int>(this->m_inputs_size());
                i < n;
                i++) {
                target = ::google::protobuf::internal::WireFormatLite::
                    InternalWriteMessageToArray(
                        1,
                        this->m_inputs(static_cast<int>(i)),
                        deterministic,
                        target);
            }

            // repeated .proto.hamilton.Output m_outputs = 2;
            for(unsigned int i
                = 0,
                n = static_cast<unsigned int>(this->m_outputs_size());
                i < n;
                i++) {
                target = ::google::protobuf::internal::WireFormatLite::
                    InternalWriteMessageToArray(
                        2,
                        this->m_outputs(static_cast<int>(i)),
                        deterministic,
                        target);
            }

            // repeated bytes m_witness = 3;
            for(int i = 0, n = this->m_witness_size(); i < n; i++) {
                target = ::google::protobuf::internal::WireFormatLite::
                    WriteBytesToArray(3, this->m_witness(i), target);
            }

            if((_internal_metadata_.have_unknown_fields()
                && ::google::protobuf::internal::
                    GetProto3PreserveUnknownsDefault())) {
                target = ::google::protobuf::internal::WireFormat::
                    SerializeUnknownFieldsToArray(
                        (::google::protobuf::internal::
                                 GetProto3PreserveUnknownsDefault()
                             ? _internal_metadata_.unknown_fields()
                             : _internal_metadata_.default_instance()),
                        target);
            }
            // @@protoc_insertion_point(serialize_to_array_end:proto.hamilton.TxRequest)
            return target;
        }

        size_t TxRequest::ByteSizeLong() const {
            // @@protoc_insertion_point(message_byte_size_start:proto.hamilton.TxRequest)
            size_t total_size = 0;

            if((_internal_metadata_.have_unknown_fields()
                && ::google::protobuf::internal::
                    GetProto3PreserveUnknownsDefault())) {
                total_size += ::google::protobuf::internal::WireFormat::
                    ComputeUnknownFieldsSize(
                        (::google::protobuf::internal::
                                 GetProto3PreserveUnknownsDefault()
                             ? _internal_metadata_.unknown_fields()
                             : _internal_metadata_.default_instance()));
            }
            // repeated .proto.hamilton.Input m_inputs = 1;
            {
                unsigned int count
                    = static_cast<unsigned int>(this->m_inputs_size());
                total_size += 1UL * count;
                for(unsigned int i = 0; i < count; i++) {
                    total_size
                        += ::google::protobuf::internal::WireFormatLite::
                            MessageSize(this->m_inputs(static_cast<int>(i)));
                }
            }

            // repeated .proto.hamilton.Output m_outputs = 2;
            {
                unsigned int count
                    = static_cast<unsigned int>(this->m_outputs_size());
                total_size += 1UL * count;
                for(unsigned int i = 0; i < count; i++) {
                    total_size
                        += ::google::protobuf::internal::WireFormatLite::
                            MessageSize(this->m_outputs(static_cast<int>(i)));
                }
            }

            // repeated bytes m_witness = 3;
            total_size += 1
                        * ::google::protobuf::internal::FromIntSize(
                              this->m_witness_size());
            for(int i = 0, n = this->m_witness_size(); i < n; i++) {
                total_size
                    += ::google::protobuf::internal::WireFormatLite::BytesSize(
                        this->m_witness(i));
            }

            int cached_size
                = ::google::protobuf::internal::ToCachedSize(total_size);
            SetCachedSize(cached_size);
            return total_size;
        }

        void TxRequest::MergeFrom(const ::google::protobuf::Message& from) {
            // @@protoc_insertion_point(generalized_merge_from_start:proto.hamilton.TxRequest)
            GOOGLE_DCHECK_NE(&from, this);
            const TxRequest* source
                = ::google::protobuf::internal::DynamicCastToGenerated<
                    const TxRequest>(&from);
            if(source == NULL) {
                // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.hamilton.TxRequest)
                ::google::protobuf::internal::ReflectionOps::Merge(from, this);
            } else {
                // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.hamilton.TxRequest)
                MergeFrom(*source);
            }
        }

        void TxRequest::MergeFrom(const TxRequest& from) {
            // @@protoc_insertion_point(class_specific_merge_from_start:proto.hamilton.TxRequest)
            GOOGLE_DCHECK_NE(&from, this);
            _internal_metadata_.MergeFrom(from._internal_metadata_);
            ::google::protobuf::uint32 cached_has_bits = 0;
            (void)cached_has_bits;

            m_inputs_.MergeFrom(from.m_inputs_);
            m_outputs_.MergeFrom(from.m_outputs_);
            m_witness_.MergeFrom(from.m_witness_);
        }

        void TxRequest::CopyFrom(const ::google::protobuf::Message& from) {
            // @@protoc_insertion_point(generalized_copy_from_start:proto.hamilton.TxRequest)
            if(&from == this)
                return;
            Clear();
            MergeFrom(from);
        }

        void TxRequest::CopyFrom(const TxRequest& from) {
            // @@protoc_insertion_point(class_specific_copy_from_start:proto.hamilton.TxRequest)
            if(&from == this)
                return;
            Clear();
            MergeFrom(from);
        }

        bool TxRequest::IsInitialized() const {
            return true;
        }

        void TxRequest::Swap(TxRequest* other) {
            if(other == this)
                return;
            InternalSwap(other);
        }
        void TxRequest::InternalSwap(TxRequest* other) {
            using std::swap;
            CastToBase(&m_inputs_)
                ->InternalSwap(CastToBase(&other->m_inputs_));
            CastToBase(&m_outputs_)
                ->InternalSwap(CastToBase(&other->m_outputs_));
            m_witness_.InternalSwap(CastToBase(&other->m_witness_));
            _internal_metadata_.Swap(&other->_internal_metadata_);
        }

        ::google::protobuf::Metadata TxRequest::GetMetadata() const {
            protobuf_hamilton_2eproto::protobuf_AssignDescriptorsOnce();
            return ::protobuf_hamilton_2eproto::file_level_metadata
                [kIndexInFileMessages];
        }

        // ===================================================================

        void TxResponse::InitAsDefaultInstance() {}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif // !defined(_MSC_VER) || _MSC_VER >= 1900

        TxResponse::TxResponse()
            : ::google::protobuf::Message(),
              _internal_metadata_(NULL) {
            ::google::protobuf::internal::InitSCC(
                &protobuf_hamilton_2eproto::scc_info_TxResponse.base);
            SharedCtor();
            // @@protoc_insertion_point(constructor:proto.hamilton.TxResponse)
        }
        TxResponse::TxResponse(const TxResponse& from)
            : ::google::protobuf::Message(),
              _internal_metadata_(NULL) {
            _internal_metadata_.MergeFrom(from._internal_metadata_);
            // @@protoc_insertion_point(copy_constructor:proto.hamilton.TxResponse)
        }

        void TxResponse::SharedCtor() {}

        TxResponse::~TxResponse() {
            // @@protoc_insertion_point(destructor:proto.hamilton.TxResponse)
            SharedDtor();
        }

        void TxResponse::SharedDtor() {}

        void TxResponse::SetCachedSize(int size) const {
            _cached_size_.Set(size);
        }
        const ::google::protobuf::Descriptor* TxResponse::descriptor() {
            ::protobuf_hamilton_2eproto::protobuf_AssignDescriptorsOnce();
            return ::protobuf_hamilton_2eproto::file_level_metadata
                [kIndexInFileMessages]
                    .descriptor;
        }

        const TxResponse& TxResponse::default_instance() {
            ::google::protobuf::internal::InitSCC(
                &protobuf_hamilton_2eproto::scc_info_TxResponse.base);
            return *internal_default_instance();
        }

        void TxResponse::Clear() {
            // @@protoc_insertion_point(message_clear_start:proto.hamilton.TxResponse)
            ::google::protobuf::uint32 cached_has_bits = 0;
            // Prevent compiler warnings about cached_has_bits being
            // unused
            (void)cached_has_bits;

            _internal_metadata_.Clear();
        }

        bool TxResponse::MergePartialFromCodedStream(
            ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION)                  \
    if(!GOOGLE_PREDICT_TRUE(EXPRESSION)) \
    goto failure
            ::google::protobuf::uint32 tag;
            // @@protoc_insertion_point(parse_start:proto.hamilton.TxResponse)
            for(;;) {
                ::std::pair<::google::protobuf::uint32, bool> p
                    = input->ReadTagWithCutoffNoLastTag(127u);
                tag = p.first;
                if(!p.second)
                    goto handle_unusual;
            handle_unusual:
                if(tag == 0) {
                    goto success;
                }
                DO_(::google::protobuf::internal::WireFormat::SkipField(
                    input,
                    tag,
                    _internal_metadata_.mutable_unknown_fields()));
            }
        success:
            // @@protoc_insertion_point(parse_success:proto.hamilton.TxResponse)
            return true;
        failure:
            // @@protoc_insertion_point(parse_failure:proto.hamilton.TxResponse)
            return false;
#undef DO_
        }

        void TxResponse::SerializeWithCachedSizes(
            ::google::protobuf::io::CodedOutputStream* output) const {
            // @@protoc_insertion_point(serialize_start:proto.hamilton.TxResponse)
            ::google::protobuf::uint32 cached_has_bits = 0;
            (void)cached_has_bits;

            if((_internal_metadata_.have_unknown_fields()
                && ::google::protobuf::internal::
                    GetProto3PreserveUnknownsDefault())) {
                ::google::protobuf::internal::WireFormat::
                    SerializeUnknownFields(
                        (::google::protobuf::internal::
                                 GetProto3PreserveUnknownsDefault()
                             ? _internal_metadata_.unknown_fields()
                             : _internal_metadata_.default_instance()),
                        output);
            }
            // @@protoc_insertion_point(serialize_end:proto.hamilton.TxResponse)
        }

        ::google::protobuf::uint8*
        TxResponse::InternalSerializeWithCachedSizesToArray(
            bool deterministic,
            ::google::protobuf::uint8* target) const {
            (void)deterministic; // Unused
            // @@protoc_insertion_point(serialize_to_array_start:proto.hamilton.TxResponse)
            ::google::protobuf::uint32 cached_has_bits = 0;
            (void)cached_has_bits;

            if((_internal_metadata_.have_unknown_fields()
                && ::google::protobuf::internal::
                    GetProto3PreserveUnknownsDefault())) {
                target = ::google::protobuf::internal::WireFormat::
                    SerializeUnknownFieldsToArray(
                        (::google::protobuf::internal::
                                 GetProto3PreserveUnknownsDefault()
                             ? _internal_metadata_.unknown_fields()
                             : _internal_metadata_.default_instance()),
                        target);
            }
            // @@protoc_insertion_point(serialize_to_array_end:proto.hamilton.TxResponse)
            return target;
        }

        size_t TxResponse::ByteSizeLong() const {
            // @@protoc_insertion_point(message_byte_size_start:proto.hamilton.TxResponse)
            size_t total_size = 0;

            if((_internal_metadata_.have_unknown_fields()
                && ::google::protobuf::internal::
                    GetProto3PreserveUnknownsDefault())) {
                total_size += ::google::protobuf::internal::WireFormat::
                    ComputeUnknownFieldsSize(
                        (::google::protobuf::internal::
                                 GetProto3PreserveUnknownsDefault()
                             ? _internal_metadata_.unknown_fields()
                             : _internal_metadata_.default_instance()));
            }
            int cached_size
                = ::google::protobuf::internal::ToCachedSize(total_size);
            SetCachedSize(cached_size);
            return total_size;
        }

        void TxResponse::MergeFrom(const ::google::protobuf::Message& from) {
            // @@protoc_insertion_point(generalized_merge_from_start:proto.hamilton.TxResponse)
            GOOGLE_DCHECK_NE(&from, this);
            const TxResponse* source
                = ::google::protobuf::internal::DynamicCastToGenerated<
                    const TxResponse>(&from);
            if(source == NULL) {
                // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.hamilton.TxResponse)
                ::google::protobuf::internal::ReflectionOps::Merge(from, this);
            } else {
                // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.hamilton.TxResponse)
                MergeFrom(*source);
            }
        }

        void TxResponse::MergeFrom(const TxResponse& from) {
            // @@protoc_insertion_point(class_specific_merge_from_start:proto.hamilton.TxResponse)
            GOOGLE_DCHECK_NE(&from, this);
            _internal_metadata_.MergeFrom(from._internal_metadata_);
            ::google::protobuf::uint32 cached_has_bits = 0;
            (void)cached_has_bits;
        }

        void TxResponse::CopyFrom(const ::google::protobuf::Message& from) {
            // @@protoc_insertion_point(generalized_copy_from_start:proto.hamilton.TxResponse)
            if(&from == this)
                return;
            Clear();
            MergeFrom(from);
        }

        void TxResponse::CopyFrom(const TxResponse& from) {
            // @@protoc_insertion_point(class_specific_copy_from_start:proto.hamilton.TxResponse)
            if(&from == this)
                return;
            Clear();
            MergeFrom(from);
        }

        bool TxResponse::IsInitialized() const {
            return true;
        }

        void TxResponse::Swap(TxResponse* other) {
            if(other == this)
                return;
            InternalSwap(other);
        }
        void TxResponse::InternalSwap(TxResponse* other) {
            using std::swap;
            _internal_metadata_.Swap(&other->_internal_metadata_);
        }

        ::google::protobuf::Metadata TxResponse::GetMetadata() const {
            protobuf_hamilton_2eproto::protobuf_AssignDescriptorsOnce();
            return ::protobuf_hamilton_2eproto::file_level_metadata
                [kIndexInFileMessages];
        }

        // @@protoc_insertion_point(namespace_scope)
    } // namespace hamilton
} // namespace proto
namespace google {
    namespace protobuf {
        template<>
        GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::proto::hamilton::OutPoint*
        Arena::CreateMaybeMessage<::proto::hamilton::OutPoint>(Arena* arena) {
            return Arena::CreateInternal<::proto::hamilton::OutPoint>(arena);
        }
        template<>
        GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::proto::hamilton::Output*
        Arena::CreateMaybeMessage<::proto::hamilton::Output>(Arena* arena) {
            return Arena::CreateInternal<::proto::hamilton::Output>(arena);
        }
        template<>
        GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::proto::hamilton::Input*
        Arena::CreateMaybeMessage<::proto::hamilton::Input>(Arena* arena) {
            return Arena::CreateInternal<::proto::hamilton::Input>(arena);
        }
        template<>
        GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::proto::hamilton::TxRequest*
        Arena::CreateMaybeMessage<::proto::hamilton::TxRequest>(Arena* arena) {
            return Arena::CreateInternal<::proto::hamilton::TxRequest>(arena);
        }
        template<>
        GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::proto::hamilton::TxResponse*
        Arena::CreateMaybeMessage<::proto::hamilton::TxResponse>(
            Arena* arena) {
            return Arena::CreateInternal<::proto::hamilton::TxResponse>(arena);
        }
    } // namespace protobuf
} // namespace google

// @@protoc_insertion_point(global_scope)
